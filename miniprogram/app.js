"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var http_1 = require("./utils/http");
var store_1 = require("./constant/store");
var ROLE_MERCHANT = 'ROLE_MERCHANT';
var ROLE_OFFICIAL = 'ROLE_OFFICIAL';
App({
    onLaunch: function () {
        var _this = this;
        wx.login({
            success: function (_a) {
                var code = _a.code;
                http_1.request({
                    url: '/api/login',
                    method: 'POST',
                    data: { code: code },
                    success: _this.setCookie
                }).then(_this.setStore)
                    .catch(console.log);
            },
            fail: console.log
        });
    },
    setStore: function (_a) {
        var _b = _a.data, username = _b.username, authorities = _b.authorities;
        wx.setStorage({
            key: store_1.USER_NAME,
            data: username
        });
        wx.setStorage({
            key: store_1.IS_MERCHANT,
            data: authorities.some(function (v) { return v.authority === ROLE_MERCHANT; })
        });
        wx.setStorage({
            key: store_1.IS_OFFICIAL,
            data: authorities.some(function (v) { return v.authority === ROLE_OFFICIAL; })
        });
    },
    setCookie: function (res) {
        if (res.header) {
            if ('Set-Cookie' in res.header) {
                wx.setStorageSync(store_1.COOKIE, res.header['Set-Cookie']);
            }
            else if ('set-cookie' in res.header) {
                wx.setStorageSync(store_1.COOKIE, res.header['set-cookie']);
            }
        }
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYXBwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEscUNBQXVDO0FBQ3ZDLDBDQUErRTtBQU8vRSxJQUFNLGFBQWEsR0FBRyxlQUFlLENBQUM7QUFDdEMsSUFBTSxhQUFhLEdBQUcsZUFBZSxDQUFDO0FBR3RDLEdBQUcsQ0FBQztJQUNBLFFBQVE7UUFBUixpQkFjQztRQVpHLEVBQUUsQ0FBQyxLQUFLLENBQUM7WUFDTCxPQUFPLEVBQUUsVUFBQyxFQUFRO29CQUFOLGNBQUk7Z0JBQ1osY0FBTyxDQUFXO29CQUNkLEdBQUcsRUFBRSxZQUFZO29CQUNqQixNQUFNLEVBQUUsTUFBTTtvQkFDZCxJQUFJLEVBQUUsRUFBRSxJQUFJLE1BQUEsRUFBRTtvQkFDZCxPQUFPLEVBQUUsS0FBSSxDQUFDLFNBQVM7aUJBQzFCLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSSxDQUFDLFFBQVEsQ0FBQztxQkFDckIsS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUN4QixDQUFDO1lBQ0QsSUFBSSxFQUFFLE9BQU8sQ0FBQyxHQUFHO1NBQ3BCLENBQUMsQ0FBQztJQUNQLENBQUM7SUFDRCxRQUFRLFlBQUMsRUFBdUQ7WUFBdEQsWUFBNkIsRUFBdEIsc0JBQVEsRUFBRSw0QkFBVztRQUVsQyxFQUFFLENBQUMsVUFBVSxDQUFDO1lBQ1YsR0FBRyxFQUFFLGlCQUFTO1lBQ2QsSUFBSSxFQUFFLFFBQVE7U0FDakIsQ0FBQyxDQUFDO1FBRUgsRUFBRSxDQUFDLFVBQVUsQ0FBQztZQUNWLEdBQUcsRUFBRSxtQkFBVztZQUNoQixJQUFJLEVBQUUsV0FBVyxDQUFDLElBQUksQ0FBQyxVQUFBLENBQUMsSUFBSSxPQUFBLENBQUMsQ0FBQyxTQUFTLEtBQUssYUFBYSxFQUE3QixDQUE2QixDQUFDO1NBQzdELENBQUMsQ0FBQztRQUVILEVBQUUsQ0FBQyxVQUFVLENBQUM7WUFDVixHQUFHLEVBQUUsbUJBQVc7WUFDaEIsSUFBSSxFQUFFLFdBQVcsQ0FBQyxJQUFJLENBQUMsVUFBQSxDQUFDLElBQUksT0FBQSxDQUFDLENBQUMsU0FBUyxLQUFLLGFBQWEsRUFBN0IsQ0FBNkIsQ0FBQztTQUM3RCxDQUFDLENBQUM7SUFDUCxDQUFDO0lBQ0QsU0FBUyxZQUFDLEdBQW9DO1FBQzFDLElBQUksR0FBRyxDQUFDLE1BQU0sRUFBRTtZQUNaLElBQUksWUFBWSxJQUFJLEdBQUcsQ0FBQyxNQUFNLEVBQUU7Z0JBQzVCLEVBQUUsQ0FBQyxjQUFjLENBQUMsY0FBTSxFQUFRLEdBQUcsQ0FBQyxNQUFPLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQzthQUM5RDtpQkFBTSxJQUFJLFlBQVksSUFBSSxHQUFHLENBQUMsTUFBTSxFQUFFO2dCQUNuQyxFQUFFLENBQUMsY0FBYyxDQUFDLGNBQU0sRUFBUSxHQUFHLENBQUMsTUFBTyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUM7YUFDOUQ7U0FDSjtJQUNMLENBQUM7Q0FDSixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZXF1ZXN0IH0gZnJvbSAnLi91dGlscy9odHRwJztcclxuaW1wb3J0IHsgQ09PS0lFLCBVU0VSX05BTUUsIElTX01FUkNIQU5ULCBJU19PRkZJQ0lBTCB9IGZyb20gJy4vY29uc3RhbnQvc3RvcmUnO1xyXG5cclxuaW50ZXJmYWNlIExvZ2luUmVzIHtcclxuICAgIHVzZXJuYW1lOiBzdHJpbmc7XHJcbiAgICBhdXRob3JpdGllczogQXJyYXk8e2F1dGhvcml0eTogc3RyaW5nfT47XHJcbn1cclxuXHJcbmNvbnN0IFJPTEVfTUVSQ0hBTlQgPSAnUk9MRV9NRVJDSEFOVCc7XHJcbmNvbnN0IFJPTEVfT0ZGSUNJQUwgPSAnUk9MRV9PRkZJQ0lBTCc7XHJcblxyXG4vLyBhcHAudHNcclxuQXBwKHtcclxuICAgIG9uTGF1bmNoKCkge1xyXG4gICAgICAgIC8vIOeZu+W9lVxyXG4gICAgICAgIHd4LmxvZ2luKHtcclxuICAgICAgICAgICAgc3VjY2VzczogKHsgY29kZSB9KSA9PiB7XHJcbiAgICAgICAgICAgICAgICByZXF1ZXN0PExvZ2luUmVzPih7XHJcbiAgICAgICAgICAgICAgICAgICAgdXJsOiAnL2FwaS9sb2dpbicsXHJcbiAgICAgICAgICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXHJcbiAgICAgICAgICAgICAgICAgICAgZGF0YTogeyBjb2RlIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogdGhpcy5zZXRDb29raWVcclxuICAgICAgICAgICAgICAgIH0pLnRoZW4odGhpcy5zZXRTdG9yZSlcclxuICAgICAgICAgICAgICAgIC5jYXRjaChjb25zb2xlLmxvZyk7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGZhaWw6IGNvbnNvbGUubG9nXHJcbiAgICAgICAgfSk7XHJcbiAgICB9LFxyXG4gICAgc2V0U3RvcmUoe2RhdGE6IHt1c2VybmFtZSwgYXV0aG9yaXRpZXN9fTogUmVzcG9uc2VEYXRhPExvZ2luUmVzPikge1xyXG4gICAgICAgIC8vIOeUqOaIt+WQjVxyXG4gICAgICAgIHd4LnNldFN0b3JhZ2Uoe1xyXG4gICAgICAgICAgICBrZXk6IFVTRVJfTkFNRSxcclxuICAgICAgICAgICAgZGF0YTogdXNlcm5hbWVcclxuICAgICAgICB9KTtcclxuICAgICAgICAvLyDmmK/lkKbllYblrrYo57uE57uHKVxyXG4gICAgICAgIHd4LnNldFN0b3JhZ2Uoe1xyXG4gICAgICAgICAgICBrZXk6IElTX01FUkNIQU5ULFxyXG4gICAgICAgICAgICBkYXRhOiBhdXRob3JpdGllcy5zb21lKHYgPT4gdi5hdXRob3JpdHkgPT09IFJPTEVfTUVSQ0hBTlQpXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgLy8g5piv5ZCm56S+5Yy6566h55CG5ZGYXHJcbiAgICAgICAgd3guc2V0U3RvcmFnZSh7XHJcbiAgICAgICAgICAgIGtleTogSVNfT0ZGSUNJQUwsXHJcbiAgICAgICAgICAgIGRhdGE6IGF1dGhvcml0aWVzLnNvbWUodiA9PiB2LmF1dGhvcml0eSA9PT0gUk9MRV9PRkZJQ0lBTClcclxuICAgICAgICB9KTtcclxuICAgIH0sXHJcbiAgICBzZXRDb29raWUocmVzOiB3eC5SZXF1ZXN0U3VjY2Vzc0NhbGxiYWNrUmVzdWx0KSB7XHJcbiAgICAgICAgaWYgKHJlcy5oZWFkZXIpIHtcclxuICAgICAgICAgICAgaWYgKCdTZXQtQ29va2llJyBpbiByZXMuaGVhZGVyKSB7XHJcbiAgICAgICAgICAgICAgICB3eC5zZXRTdG9yYWdlU3luYyhDT09LSUUsICg8YW55PnJlcy5oZWFkZXIpWydTZXQtQ29va2llJ10pO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKCdzZXQtY29va2llJyBpbiByZXMuaGVhZGVyKSB7XHJcbiAgICAgICAgICAgICAgICB3eC5zZXRTdG9yYWdlU3luYyhDT09LSUUsICg8YW55PnJlcy5oZWFkZXIpWydzZXQtY29va2llJ10pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59KTtcclxuIl19