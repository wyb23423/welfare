"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var http_1 = require("../../../utils/http");
var util_1 = require("../../../utils/util");
Page({
    activity: null,
    goods: null,
    data: {
        history: [],
        type: '',
        tabType: 0
    },
    onLoad: function (query) {
        this.data.type = query.type;
        var type = "_" + query.type;
        this[type] && this[type]();
        var titles = {
            await: '待参加',
            auditing: '待审核',
            complete: '已参加',
            evaluate: '待评价',
            collection: '我的收藏'
        };
        wx.setNavigationBarTitle({
            title: titles[query.type]
        });
    },
    delete: function (e) {
        var _this = this;
        var index = +e.target.dataset.index;
        var _a = this.data, history = _a.history, type = _a.type;
        var isCollection = type === 'collection';
        wx.showModal({
            content: isCollection ? '取消收藏？' : '删除该活动记录？',
            success: function (res) {
                if (res.confirm) {
                    if (isCollection) {
                        return _this._cancelCollect(index);
                    }
                    http_1.request({
                        url: '/api/activity/participation',
                        method: 'DELETE',
                        data: { activityId: history[index].id }
                    })
                        .then(function () {
                        wx.showToast({ title: '删除成功' });
                        history.splice(index, 1);
                        _this.setData({ history: history });
                    })
                        .catch(console.log);
                }
            }
        });
    },
    none: function () {
    },
    switch: function (e) {
        var type = +e.target.dataset.type;
        this.data.tabType = type;
        var another = type ? this.goods : this.activity;
        if (another) {
            this.data.history = another;
            return this.setData(this.data);
        }
        this._collection();
    },
    _cancelCollect: function (index) {
        var _this = this;
        var history = this.data.history;
        http_1.request({
            url: '/api/like',
            method: 'DELETE',
            data: {
                targetId: history[index].id,
                type: this.data.tabType
            }
        })
            .then(function () {
            wx.showToast({ title: '取消搜藏成功' });
            history.splice(index, 1);
            _this.setData({ history: history });
        })
            .catch(console.log);
    },
    _await: function () {
        this._request('/api/activity/participation/list/await');
    },
    _auditing: function () {
        this._request('/api/activity/participation/list/auditing');
    },
    _complete: function () {
        this._request('/api/activity/participation/list/complete');
    },
    _evaluate: function () {
        this._request('/api/activity/participation/list/evaluate');
    },
    _collection: function () {
        var _this = this;
        var tabType = this.data.tabType;
        http_1.request({
            url: '/api/like',
            data: { type: tabType }
        })
            .then(function (_a) {
            var data = _a.data;
            var list = data.map(util_1.parseData);
            _this[tabType ? 'goods' : 'activity'] = list;
            _this.setData({
                history: list,
                type: _this.data.type,
                tabType: tabType
            });
        })
            .catch(console.log);
    },
    _request: function (url) {
        var _this = this;
        http_1.request({ url: url })
            .then(function (_a) {
            var data = _a.data;
            return _this.setData({ type: _this.data.type, history: data.map(util_1.parseData) });
        })
            .catch(console.log);
    }
});
//# sourceMappingURL=data:application/json;base64,