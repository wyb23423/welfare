"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var http_1 = require("../../utils/http");
var util_1 = require("../../utils/util");
var item_1 = require("../../components/list/item/item");
var status_1 = require("../../constant/status");
Page({
    isGoods: 0,
    data: {
        id: 1,
        like: 40,
        isCollected: false,
        canOp: true
    },
    onLoad: function (query) {
        if (!query) {
            console.error('路由参数错误');
            return wx.navigateBack({ delta: 1 });
        }
        var isGoods = this.isGoods = +query.isGoods;
        this._init(isGoods, query.id);
        wx.setNavigationBarTitle({
            title: isGoods ? '商品详情' : '活动详情'
        });
    },
    exchange: item_1.exchange,
    collect: function () {
        var _this = this;
        var old = this.data.isCollected;
        http_1.request({
            url: '/api/like',
            method: old ? 'DELETE' : 'PUT',
            data: {
                targetId: this.data.id,
                type: this.isGoods
            }
        })
            .then(function () { return _this.setData({
            isCollected: !old,
            like: old ? _this.data.like - 1 : _this.data.like + 1
        }); })
            .catch(console.log);
    },
    _init: function (isGoods, id) {
        var _this = this;
        http_1.request({ url: "/api/" + (isGoods ? 'commodity' : 'activity') + "/" + id })
            .then(function (_a) {
            var data = _a.data;
            data = util_1.parseData(data);
            _this.setData(__assign({}, data, { startTime: util_1.formatTime(new Date(+data.origination)), endTime: util_1.formatTime(new Date(+data.finish)), img: data.originImg, merchant: data.merchant ? util_1.parseData(data.merchant) : null, isActivity: !isGoods, canOp: isGoods ? _this.canExchange(data) : _this.canSign(data) }));
        })
            .catch(console.log);
    },
    canExchange: function (data) {
        var now = Date.now();
        var isTimeValid = data.finish >= now && data.origination <= now;
        return isTimeValid && data.size > data.sign && data.status === status_1.GOODS_STATUS.NORMAL;
    },
    canSign: function (data) {
        return data.origination >= Date.now() && data.size > data.sign;
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV0YWlscy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImRldGFpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUdBLHlDQUEyQztBQUMzQyx5Q0FBeUQ7QUFDekQsd0RBQTJEO0FBQzNELGdEQUFxRDtBQUVyRCxJQUFJLENBQUM7SUFDRCxPQUFPLEVBQUUsQ0FBQztJQUNWLElBQUksRUFBRTtRQUNGLEVBQUUsRUFBRSxDQUFDO1FBQ0wsSUFBSSxFQUFFLEVBQUU7UUFDUixXQUFXLEVBQUUsS0FBSztRQUNsQixLQUFLLEVBQUUsSUFBSTtLQUNkO0lBQ0QsTUFBTSxZQUFDLEtBQXdDO1FBQzNDLElBQUcsQ0FBQyxLQUFLLEVBQUU7WUFDUCxPQUFPLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQ3hCLE9BQU8sRUFBRSxDQUFDLFlBQVksQ0FBQyxFQUFDLEtBQUssRUFBRSxDQUFDLEVBQUMsQ0FBQyxDQUFDO1NBQ3RDO1FBRUQsSUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sR0FBRyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUM7UUFDOUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQzlCLEVBQUUsQ0FBQyxxQkFBcUIsQ0FBQztZQUNyQixLQUFLLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLE1BQU07U0FDbkMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUNELFFBQVEsaUJBQUE7SUFDUixPQUFPO1FBQVAsaUJBZUM7UUFkRyxJQUFNLEdBQUcsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQztRQUNsQyxjQUFPLENBQUM7WUFDSixHQUFHLEVBQUUsV0FBVztZQUNoQixNQUFNLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLEtBQUs7WUFDOUIsSUFBSSxFQUFFO2dCQUNGLFFBQVEsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUU7Z0JBQ3RCLElBQUksRUFBRSxJQUFJLENBQUMsT0FBTzthQUNyQjtTQUNKLENBQUM7YUFDRyxJQUFJLENBQUMsY0FBTSxPQUFBLEtBQUksQ0FBQyxPQUFRLENBQUM7WUFDdEIsV0FBVyxFQUFFLENBQUMsR0FBRztZQUNqQixJQUFJLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxLQUFJLENBQUMsSUFBSSxDQUFDLElBQUksR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxHQUFHLENBQUM7U0FDdEQsQ0FBQyxFQUhVLENBR1YsQ0FBQzthQUNGLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDNUIsQ0FBQztJQUNELEtBQUssWUFBQyxPQUFlLEVBQUUsRUFBVTtRQUFqQyxpQkFlQztRQWRHLGNBQU8sQ0FBdUIsRUFBRSxHQUFHLEVBQUUsV0FBUSxPQUFPLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsVUFBVSxVQUFJLEVBQUksRUFBRSxDQUFDO2FBQ3JGLElBQUksQ0FBQyxVQUFDLEVBQVE7Z0JBQU4sY0FBSTtZQUNULElBQUksR0FBRyxnQkFBUyxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ3ZCLEtBQUksQ0FBQyxPQUFRLGNBQ04sSUFBSSxJQUNQLFNBQVMsRUFBRSxpQkFBVSxDQUFDLElBQUksSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLEVBQ2xELE9BQU8sRUFBRSxpQkFBVSxDQUFDLElBQUksSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQzNDLEdBQUcsRUFBRSxJQUFJLENBQUMsU0FBUyxFQUNuQixRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsZ0JBQVMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksRUFDekQsVUFBVSxFQUFFLENBQUMsT0FBTyxFQUNwQixLQUFLLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxLQUFJLENBQUMsV0FBVyxDQUFhLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFJLENBQUMsT0FBTyxDQUFVLElBQUksQ0FBQyxJQUNuRixDQUFDO1FBQ1AsQ0FBQyxDQUFDO2FBQ0QsS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUM1QixDQUFDO0lBQ0QsV0FBVyxZQUFDLElBQWdCO1FBQ3hCLElBQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUN2QixJQUFNLFdBQVcsR0FBRyxJQUFJLENBQUMsTUFBTSxJQUFJLEdBQUcsSUFBSSxJQUFJLENBQUMsV0FBVyxJQUFJLEdBQUcsQ0FBQztRQUNsRSxPQUFPLFdBQVcsSUFBSSxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDLE1BQU0sS0FBSyxxQkFBWSxDQUFDLE1BQU0sQ0FBQztJQUN2RixDQUFDO0lBQ0QsT0FBTyxZQUFDLElBQWE7UUFDakIsT0FBTyxJQUFJLENBQUMsV0FBVyxJQUFJLElBQUksQ0FBQyxHQUFHLEVBQUUsSUFBSSxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7SUFDbkUsQ0FBQztDQUNKLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiDlhaznm4rmtLvliqjor6bmg4VcclxuICovXHJcbmltcG9ydCB7IHJlcXVlc3QgfSBmcm9tICcuLi8uLi91dGlscy9odHRwJztcclxuaW1wb3J0IHsgcGFyc2VEYXRhLCBmb3JtYXRUaW1lIH0gZnJvbSAnLi4vLi4vdXRpbHMvdXRpbCc7XHJcbmltcG9ydCB7IGV4Y2hhbmdlIH0gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9saXN0L2l0ZW0vaXRlbSc7XHJcbmltcG9ydCB7IEdPT0RTX1NUQVRVUyB9IGZyb20gJy4uLy4uL2NvbnN0YW50L3N0YXR1cyc7XHJcblxyXG5QYWdlKHtcclxuICAgIGlzR29vZHM6IDAsXHJcbiAgICBkYXRhOiB7XHJcbiAgICAgICAgaWQ6IDEsXHJcbiAgICAgICAgbGlrZTogNDAsXHJcbiAgICAgICAgaXNDb2xsZWN0ZWQ6IGZhbHNlLFxyXG4gICAgICAgIGNhbk9wOiB0cnVlIC8vIOaYr+WQpuWPr+S7pei/m+ihjOaKpeWQjeaIluWFkeaNolxyXG4gICAgfSxcclxuICAgIG9uTG9hZChxdWVyeT86IFJlY29yZDwnaXNHb29kcycgfCAnaWQnLCBzdHJpbmc+KSB7XHJcbiAgICAgICAgaWYoIXF1ZXJ5KSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ+i3r+eUseWPguaVsOmUmeivrycpO1xyXG4gICAgICAgICAgICByZXR1cm4gd3gubmF2aWdhdGVCYWNrKHtkZWx0YTogMX0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY29uc3QgaXNHb29kcyA9IHRoaXMuaXNHb29kcyA9ICtxdWVyeS5pc0dvb2RzO1xyXG4gICAgICAgIHRoaXMuX2luaXQoaXNHb29kcywgcXVlcnkuaWQpO1xyXG4gICAgICAgIHd4LnNldE5hdmlnYXRpb25CYXJUaXRsZSh7XHJcbiAgICAgICAgICAgIHRpdGxlOiBpc0dvb2RzID8gJ+WVhuWTgeivpuaDhScgOiAn5rS75Yqo6K+m5oOFJ1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSxcclxuICAgIGV4Y2hhbmdlLFxyXG4gICAgY29sbGVjdCgpIHtcclxuICAgICAgICBjb25zdCBvbGQgPSB0aGlzLmRhdGEuaXNDb2xsZWN0ZWQ7XHJcbiAgICAgICAgcmVxdWVzdCh7XHJcbiAgICAgICAgICAgIHVybDogJy9hcGkvbGlrZScsXHJcbiAgICAgICAgICAgIG1ldGhvZDogb2xkID8gJ0RFTEVURScgOiAnUFVUJyxcclxuICAgICAgICAgICAgZGF0YToge1xyXG4gICAgICAgICAgICAgICAgdGFyZ2V0SWQ6IHRoaXMuZGF0YS5pZCxcclxuICAgICAgICAgICAgICAgIHR5cGU6IHRoaXMuaXNHb29kc1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgICAgICAgICAgLnRoZW4oKCkgPT4gdGhpcy5zZXREYXRhISh7XHJcbiAgICAgICAgICAgICAgICBpc0NvbGxlY3RlZDogIW9sZCxcclxuICAgICAgICAgICAgICAgIGxpa2U6IG9sZCA/IHRoaXMuZGF0YS5saWtlIC0gMSA6IHRoaXMuZGF0YS5saWtlICsgMVxyXG4gICAgICAgICAgICB9KSlcclxuICAgICAgICAgICAgLmNhdGNoKGNvbnNvbGUubG9nKTtcclxuICAgIH0sXHJcbiAgICBfaW5pdChpc0dvb2RzOiBudW1iZXIsIGlkOiBzdHJpbmcpIHtcclxuICAgICAgICByZXF1ZXN0PElBY3RpdmUgfCBJQ29tbW9kaXR5Pih7IHVybDogYC9hcGkvJHtpc0dvb2RzID8gJ2NvbW1vZGl0eScgOiAnYWN0aXZpdHknfS8ke2lkfWAgfSlcclxuICAgICAgICAgICAgLnRoZW4oKHsgZGF0YSB9KSA9PiB7XHJcbiAgICAgICAgICAgICAgICBkYXRhID0gcGFyc2VEYXRhKGRhdGEpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zZXREYXRhISh7XHJcbiAgICAgICAgICAgICAgICAgICAgLi4uZGF0YSxcclxuICAgICAgICAgICAgICAgICAgICBzdGFydFRpbWU6IGZvcm1hdFRpbWUobmV3IERhdGUoK2RhdGEub3JpZ2luYXRpb24pKSxcclxuICAgICAgICAgICAgICAgICAgICBlbmRUaW1lOiBmb3JtYXRUaW1lKG5ldyBEYXRlKCtkYXRhLmZpbmlzaCkpLFxyXG4gICAgICAgICAgICAgICAgICAgIGltZzogZGF0YS5vcmlnaW5JbWcsXHJcbiAgICAgICAgICAgICAgICAgICAgbWVyY2hhbnQ6IGRhdGEubWVyY2hhbnQgPyBwYXJzZURhdGEoZGF0YS5tZXJjaGFudCkgOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgICAgIGlzQWN0aXZpdHk6ICFpc0dvb2RzLFxyXG4gICAgICAgICAgICAgICAgICAgIGNhbk9wOiBpc0dvb2RzID8gdGhpcy5jYW5FeGNoYW5nZSg8SUNvbW1vZGl0eT5kYXRhKSA6IHRoaXMuY2FuU2lnbig8SUFjdGl2ZT5kYXRhKVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC5jYXRjaChjb25zb2xlLmxvZyk7XHJcbiAgICB9LFxyXG4gICAgY2FuRXhjaGFuZ2UoZGF0YTogSUNvbW1vZGl0eSkge1xyXG4gICAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7XHJcbiAgICAgICAgY29uc3QgaXNUaW1lVmFsaWQgPSBkYXRhLmZpbmlzaCA+PSBub3cgJiYgZGF0YS5vcmlnaW5hdGlvbiA8PSBub3c7XHJcbiAgICAgICAgcmV0dXJuIGlzVGltZVZhbGlkICYmIGRhdGEuc2l6ZSA+IGRhdGEuc2lnbiAmJiBkYXRhLnN0YXR1cyA9PT0gR09PRFNfU1RBVFVTLk5PUk1BTDtcclxuICAgIH0sXHJcbiAgICBjYW5TaWduKGRhdGE6IElBY3RpdmUpIHtcclxuICAgICAgICByZXR1cm4gZGF0YS5vcmlnaW5hdGlvbiA+PSBEYXRlLm5vdygpICYmIGRhdGEuc2l6ZSA+IGRhdGEuc2lnbjtcclxuICAgIH1cclxufSk7XHJcbiJdfQ==