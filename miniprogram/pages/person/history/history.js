"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var http_1 = require("../../../utils/http");
var util_1 = require("../../../utils/util");
var index_1 = require("../../../constant/index");
Page({
    data: {
        history: [],
        type: '',
        tabType: 0,
        another: []
    },
    onLoad: function (query) {
        this.data.type = query.type;
        var type = "_" + query.type;
        this[type] && this[type]();
        var titles = {
            await: '待参加',
            auditing: '待审核',
            complete: '已参加',
            evaluate: '待评价',
            initiate: '我的发起',
            collection: '我的收藏'
        };
        wx.setNavigationBarTitle({
            title: titles[query.type]
        });
    },
    delete: function (e) {
        var _this = this;
        var index = +e.target.dataset.index;
        var history = this.data.history;
        wx.showModal({
            content: this.data.type === 'collection' ? '取消收藏？' : '删除该活动？',
            success: function (res) {
                if (res.confirm) {
                    if (_this.data.type === 'collection') {
                        return _this._cancelCollect(index);
                    }
                    http_1.request({
                        url: '/api/activity',
                        method: 'DELETE',
                        data: { activityId: history[index].id }
                    })
                        .then(function () {
                        wx.showToast({ title: '删除成功' });
                        history.splice(index, 1);
                        _this.setData({ history: history });
                    })
                        .catch(console.log);
                }
            }
        });
    },
    openEnList: function (e) {
        var index = +e.target.dataset.index;
        var enList = this.selectComponent('#en-list');
        enList.show(this.data.history[index].id);
    },
    ok: function (e) {
        var _this = this;
        wx.showModal({
            content: '该活动已完成?',
            success: function (res) {
                if (res.confirm) {
                    var index_2 = +e.target.dataset.index;
                    var history_1 = _this.data.history;
                    http_1.request({ url: '/api/activity/achieve/' + history_1[index_2].id })
                        .then(function () {
                        wx.showToast({ title: '操作成功' });
                        history_1[index_2].status = index_1.ActiveStatus.complete;
                        _this.setData({ history: history_1 });
                    })
                        .catch(console.log);
                }
            }
        });
    },
    none: function () {
    },
    switch: function (e) {
        this.data.tabType = +e.target.dataset.type;
        var another = this.data.another;
        this.data.another = this.data.history;
        if (another.length) {
            this.data.history = another;
            return this.setData(this.data);
        }
        this._collection();
    },
    _cancelCollect: function (index) {
        var _this = this;
        var history = this.data.history;
        http_1.request({
            url: '/api/like',
            method: 'DELETE',
            data: {
                targetId: history[index].id,
                type: this.data.tabType
            }
        })
            .then(function () {
            wx.showToast({ title: '取消搜藏成功' });
            history.splice(index, 1);
            _this.setData({ history: history });
        })
            .catch(console.log);
    },
    _await: function () {
        this._request('/api/activity/participation/list/await');
    },
    _auditing: function () {
        this._request('/api/activity/participation/list/auditing');
    },
    _complete: function () {
        this._request('/api/activity/participation/list/complete');
    },
    _evaluate: function () {
        this._request('/api/activity/participation/list/evaluate');
    },
    _initiate: function () {
        this._request('/api/activity/my');
    },
    _collection: function () {
        var _this = this;
        var tabType = this.data.tabType;
        http_1.request({
            url: '/api/like',
            data: { type: tabType }
        })
            .then(function (_a) {
            var data = _a.data;
            return _this.setData({
                history: data.map(util_1.parseData),
                type: _this.data.type,
                tabType: tabType
            });
        })
            .catch(console.log);
    },
    _request: function (url) {
        var _this = this;
        http_1.request({ url: url })
            .then(function (_a) {
            var data = _a.data;
            return _this.setData({ type: _this.data.type, history: data.map(util_1.parseData) });
        })
            .catch(console.log);
    }
});
//# sourceMappingURL=data:application/json;base64,