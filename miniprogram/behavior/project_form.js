"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = Behavior({
    ready: function () {
        this.data.formEl = this.selectComponent('#form');
    },
    methods: {
        reset: function (_a) {
            var detail = _a.detail;
            this.setData({ form: detail });
        },
        mask: function (e) {
            console.log(e);
            this.setData({ hasMask: e.detail.visible });
        },
        onInput: function (e) {
            var _a;
            var name = e.target.id;
            this.setData((_a = {}, _a["form." + name] = this._parseValue(e.detail.value, name), _a));
            if (this.data.formEl) {
                this.data.formEl
                    .valid(name)
                    .catch(console.log);
            }
        },
        onSubmit: function () {
            var _this = this;
            if (this.data.formEl) {
                this.data.formEl.valid()
                    .then(function () { return _this._submit() || true; })
                    .catch(console.log);
            }
            else {
                this._submit();
            }
        },
        _submit: function () {
            console.log(this.data.form);
        },
        _parseValue: function (value) {
            return value;
        }
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvamVjdF9mb3JtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsicHJvamVjdF9mb3JtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBZUEsa0JBQWUsUUFBUSxDQUFjO0lBQ2pDLEtBQUs7UUFDRCxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsZUFBZ0IsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUN0RCxDQUFDO0lBQ0QsT0FBTyxFQUFFO1FBQ0wsS0FBSyxZQUFDLEVBQVU7Z0JBQVIsa0JBQU07WUFDVixJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxDQUFDLENBQUM7UUFDbkMsQ0FBQztRQUNELElBQUksWUFBQyxDQUFZO1lBQ2IsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNmLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDO1FBQ2hELENBQUM7UUFDRCxPQUFPLFlBQUMsQ0FBWTs7WUFDaEIsSUFBTSxJQUFJLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUM7WUFDekIsSUFBSSxDQUFDLE9BQVEsV0FBRyxHQUFDLFVBQVEsSUFBTSxJQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLE1BQUcsQ0FBQztZQUU1RSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFO2dCQUNsQixJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU07cUJBQ1gsS0FBSyxDQUFDLElBQUksQ0FBQztxQkFDWCxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO2FBQzNCO1FBQ0wsQ0FBQztRQUNELFFBQVE7WUFBUixpQkFRQztZQVBHLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUU7Z0JBQ2xCLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRTtxQkFDbkIsSUFBSSxDQUFDLGNBQU0sT0FBQSxLQUFJLENBQUMsT0FBTyxFQUFFLElBQUksSUFBSSxFQUF0QixDQUFzQixDQUFDO3FCQUNsQyxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO2FBQzNCO2lCQUFNO2dCQUNILElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQzthQUNsQjtRQUNMLENBQUM7UUFDRCxPQUFPO1lBQ0gsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ2hDLENBQUM7UUFDRCxXQUFXLFlBQUMsS0FBYTtZQUNyQixPQUFPLEtBQUssQ0FBQztRQUNqQixDQUFDO0tBQ0o7Q0FDSixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICog6aG555uu6YeM5aSn6YOo5YiG6KGo5Y2V6YCa55So5pa55rOVXHJcbiAqL1xyXG5pbXBvcnQgeyBGb3JtIH0gZnJvbSAnLi4vY29tcG9uZW50cy9mb3JtL2Zvcm0nO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBQcm9qZWN0Rm9ybSBleHRlbmRzIFd4Q29tcG9uZW50IHtcclxuICAgIGRhdGE6IHtcclxuICAgICAgICBmb3JtRWw/OiBGb3JtIHwgbnVsbCxcclxuICAgICAgICBmb3JtOiBJQW55T2JqZWN0LFxyXG4gICAgICAgIGhhc01hc2s6IGJvb2xlYW5cclxuICAgIH07XHJcbiAgICBfc3VibWl0KCk6IFByb21pc2U8dHJ1ZT4gfCB2b2lkO1xyXG4gICAgX3BhcnNlVmFsdWUodmFsdWU6IHN0cmluZywgbmFtZTogc3RyaW5nKTogYW55O1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBCZWhhdmlvcjxQcm9qZWN0Rm9ybT4oe1xyXG4gICAgcmVhZHkoKSB7XHJcbiAgICAgICAgdGhpcy5kYXRhLmZvcm1FbCA9IHRoaXMuc2VsZWN0Q29tcG9uZW50ISgnI2Zvcm0nKTtcclxuICAgIH0sXHJcbiAgICBtZXRob2RzOiB7XHJcbiAgICAgICAgcmVzZXQoeyBkZXRhaWwgfSkge1xyXG4gICAgICAgICAgICB0aGlzLnNldERhdGEoeyBmb3JtOiBkZXRhaWwgfSk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBtYXNrKGU6IEJhc2VFdmVudCkge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlKTtcclxuICAgICAgICAgICAgdGhpcy5zZXREYXRhKHsgaGFzTWFzazogZS5kZXRhaWwudmlzaWJsZSB9KTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIG9uSW5wdXQoZTogQmFzZUV2ZW50KSB7XHJcbiAgICAgICAgICAgIGNvbnN0IG5hbWUgPSBlLnRhcmdldC5pZDtcclxuICAgICAgICAgICAgdGhpcy5zZXREYXRhISh7IFtgZm9ybS4ke25hbWV9YF06IHRoaXMuX3BhcnNlVmFsdWUoZS5kZXRhaWwudmFsdWUsIG5hbWUpIH0pO1xyXG5cclxuICAgICAgICAgICAgaWYgKHRoaXMuZGF0YS5mb3JtRWwpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuZGF0YS5mb3JtRWxcclxuICAgICAgICAgICAgICAgICAgICAudmFsaWQobmFtZSlcclxuICAgICAgICAgICAgICAgICAgICAuY2F0Y2goY29uc29sZS5sb2cpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBvblN1Ym1pdCgpIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuZGF0YS5mb3JtRWwpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuZGF0YS5mb3JtRWwudmFsaWQoKVxyXG4gICAgICAgICAgICAgICAgICAgIC50aGVuKCgpID0+IHRoaXMuX3N1Ym1pdCgpIHx8IHRydWUpXHJcbiAgICAgICAgICAgICAgICAgICAgLmNhdGNoKGNvbnNvbGUubG9nKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3N1Ym1pdCgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBfc3VibWl0KCkge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmRhdGEuZm9ybSk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBfcGFyc2VWYWx1ZSh2YWx1ZTogc3RyaW5nKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0pO1xyXG4iXX0=