"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = Behavior({
    ready: function () {
        this.data.formEl = this.selectComponent('#form');
    },
    methods: {
        reset: function (_a) {
            var detail = _a.detail;
            this.setData({ form: detail });
        },
        mask: function (e) {
            this.setData({ hasMask: e.detail.visible });
        },
        onInput: function (e) {
            var _a;
            var name = e.target.id;
            this.setData((_a = {}, _a["form." + name] = this._parseValue(e.detail.value, name), _a));
            if (this.data.formEl) {
                this.data.formEl
                    .valid(name)
                    .catch(console.log);
            }
        },
        onSubmit: function () {
            var _this = this;
            if (this.data.formEl) {
                this.data.formEl.valid()
                    .then(function () { return _this._submit() || true; })
                    .catch(console.log);
            }
            else {
                this._submit();
            }
        },
        _submit: function () {
            console.log(this.data.form);
        },
        _parseValue: function (value) {
            return value;
        }
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvamVjdF9mb3JtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsicHJvamVjdF9mb3JtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBaUJBLGtCQUFlLFFBQVEsQ0FBYztJQUNqQyxLQUFLO1FBQ0QsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLGVBQWdCLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDdEQsQ0FBQztJQUNELE9BQU8sRUFBRTtRQUNMLEtBQUssWUFBQyxFQUFVO2dCQUFSLGtCQUFNO1lBQ1YsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDO1FBQ25DLENBQUM7UUFDRCxJQUFJLFlBQUMsQ0FBWTtZQUNiLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDO1FBQ2hELENBQUM7UUFDRCxPQUFPLFlBQUMsQ0FBWTs7WUFDaEIsSUFBTSxJQUFJLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUM7WUFDekIsSUFBSSxDQUFDLE9BQVEsV0FBRyxHQUFDLFVBQVEsSUFBTSxJQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLE1BQUcsQ0FBQztZQUU1RSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFO2dCQUNsQixJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU07cUJBQ1gsS0FBSyxDQUFDLElBQUksQ0FBQztxQkFDWCxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO2FBQzNCO1FBQ0wsQ0FBQztRQUNELFFBQVE7WUFBUixpQkFRQztZQVBHLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUU7Z0JBQ2xCLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRTtxQkFDbkIsSUFBSSxDQUFDLGNBQU0sT0FBQSxLQUFJLENBQUMsT0FBTyxFQUFFLElBQUksSUFBSSxFQUF0QixDQUFzQixDQUFDO3FCQUNsQyxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO2FBQzNCO2lCQUFNO2dCQUNILElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQzthQUNsQjtRQUNMLENBQUM7UUFDRCxPQUFPO1lBQ0gsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ2hDLENBQUM7UUFDRCxXQUFXLFlBQUMsS0FBYTtZQUNyQixPQUFPLEtBQUssQ0FBQztRQUNqQixDQUFDO0tBQ0o7Q0FDSixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICog6aG555uu6YeM5aSn6YOo5YiG6KGo5Y2V6YCa55So5pa55rOVXHJcbiAqL1xyXG5pbXBvcnQgeyBGb3JtIH0gZnJvbSAnLi4vY29tcG9uZW50cy9mb3JtL2Zvcm0nO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBQcm9qZWN0Rm9ybURhdGEge1xyXG4gICAgZm9ybUVsPzogRm9ybSB8IG51bGw7XHJcbiAgICBmb3JtOiBJQW55T2JqZWN0O1xyXG4gICAgaGFzTWFzazogYm9vbGVhbjtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBQcm9qZWN0Rm9ybSBleHRlbmRzIFd4Q29tcG9uZW50IHtcclxuICAgIGRhdGE6IFByb2plY3RGb3JtRGF0YTtcclxuICAgIF9zdWJtaXQoKTogUHJvbWlzZTx0cnVlPiB8IHZvaWQ7XHJcbiAgICBfcGFyc2VWYWx1ZSh2YWx1ZTogc3RyaW5nLCBuYW1lOiBzdHJpbmcpOiBhbnk7XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEJlaGF2aW9yPFByb2plY3RGb3JtPih7XHJcbiAgICByZWFkeSgpIHtcclxuICAgICAgICB0aGlzLmRhdGEuZm9ybUVsID0gdGhpcy5zZWxlY3RDb21wb25lbnQhKCcjZm9ybScpO1xyXG4gICAgfSxcclxuICAgIG1ldGhvZHM6IHtcclxuICAgICAgICByZXNldCh7IGRldGFpbCB9KSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2V0RGF0YSh7IGZvcm06IGRldGFpbCB9KTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIG1hc2soZTogQmFzZUV2ZW50KSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2V0RGF0YSh7IGhhc01hc2s6IGUuZGV0YWlsLnZpc2libGUgfSk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBvbklucHV0KGU6IEJhc2VFdmVudCkge1xyXG4gICAgICAgICAgICBjb25zdCBuYW1lID0gZS50YXJnZXQuaWQ7XHJcbiAgICAgICAgICAgIHRoaXMuc2V0RGF0YSEoeyBbYGZvcm0uJHtuYW1lfWBdOiB0aGlzLl9wYXJzZVZhbHVlKGUuZGV0YWlsLnZhbHVlLCBuYW1lKSB9KTtcclxuXHJcbiAgICAgICAgICAgIGlmICh0aGlzLmRhdGEuZm9ybUVsKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmRhdGEuZm9ybUVsXHJcbiAgICAgICAgICAgICAgICAgICAgLnZhbGlkKG5hbWUpXHJcbiAgICAgICAgICAgICAgICAgICAgLmNhdGNoKGNvbnNvbGUubG9nKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgb25TdWJtaXQoKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmRhdGEuZm9ybUVsKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmRhdGEuZm9ybUVsLnZhbGlkKClcclxuICAgICAgICAgICAgICAgICAgICAudGhlbigoKSA9PiB0aGlzLl9zdWJtaXQoKSB8fCB0cnVlKVxyXG4gICAgICAgICAgICAgICAgICAgIC5jYXRjaChjb25zb2xlLmxvZyk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9zdWJtaXQoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgX3N1Ym1pdCgpIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5kYXRhLmZvcm0pO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgX3BhcnNlVmFsdWUodmFsdWU6IHN0cmluZykge1xyXG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59KTtcclxuIl19