"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var index_1 = require("../constant/index");
var http_1 = require("./http");
function formatTime(date) {
    var _a = resolveTime(date), year = _a.year, month = _a.month, day = _a.day, hour = _a.hour, minute = _a.minute;
    return [year, month, day].map(formatNumber).join('/') + ' ' + [hour, minute].map(formatNumber).join(':');
}
exports.formatTime = formatTime;
function resolveTime(time) {
    var date = time instanceof Date ? time : new Date(time);
    var year = date.getFullYear();
    var month = date.getMonth() + 1;
    var day = date.getDate();
    var hour = date.getHours();
    var minute = date.getMinutes();
    return { year: year, month: month, day: day, hour: hour, minute: minute };
}
exports.resolveTime = resolveTime;
function getOptions(path) {
    var page = getCurrentPages().pop();
    if (!(page && page.route === path)) {
        return wx.showModal({
            title: '非法访问',
            content: '路由参数错误，即将返回主页',
            showCancel: false,
            complete: function () {
                wx.reLaunch({ url: '/pages/index/index' });
            }
        });
    }
    return page.options || {};
}
exports.getOptions = getOptions;
function parseData(v, i) {
    if (i === void 0) { i = 0; }
    v.authStr = Reflect.get(index_1.AUTHENTICATION, v.authentication) || '未认证';
    v.originImg = v.img;
    v.img = v.img + '?thumb=true';
    v.sign = v.attended || v.sign || 0;
    v.size = v.size || 0;
    v.index = i;
    v.isCollected = !!v.liked;
    return v;
}
exports.parseData = parseData;
function upload(newSrc, oldSrc) {
    if (!newSrc) {
        console.warn('文件路径不能为空');
        return Promise.resolve(null);
    }
    if (oldSrc === newSrc) {
        return Promise.resolve(newSrc);
    }
    return http_1.uploadFile({
        url: '/api/file',
        name: 'file',
        filePath: newSrc
    }).then(function (res) { return res.data; });
}
exports.upload = upload;
function formatNumber(n) {
    var str = n.toString();
    return str[1] ? str : '0' + str;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInV0aWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwyQ0FBbUQ7QUFDbkQsK0JBQW9DO0FBRXBDLFNBQWdCLFVBQVUsQ0FBQyxJQUFVO0lBQzdCLElBQUEsc0JBQW9ELEVBQW5ELGNBQUksRUFBRSxnQkFBSyxFQUFFLFlBQUcsRUFBRSxjQUFJLEVBQUUsa0JBQTJCLENBQUM7SUFDM0QsT0FBTyxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUMzRyxDQUFDO0FBSEQsZ0NBR0M7QUFLRCxTQUFnQixXQUFXLENBQUMsSUFBbUI7SUFDM0MsSUFBTSxJQUFJLEdBQUcsSUFBSSxZQUFZLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUUxRCxJQUFNLElBQUksR0FBRyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDaEMsSUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLFFBQVEsRUFBRSxHQUFHLENBQUMsQ0FBQztJQUNsQyxJQUFNLEdBQUcsR0FBRyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDM0IsSUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQzdCLElBQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztJQUVqQyxPQUFPLEVBQUMsSUFBSSxNQUFBLEVBQUUsS0FBSyxPQUFBLEVBQUUsR0FBRyxLQUFBLEVBQUUsSUFBSSxNQUFBLEVBQUUsTUFBTSxRQUFBLEVBQUMsQ0FBQztBQUM1QyxDQUFDO0FBVkQsa0NBVUM7QUFLRCxTQUFnQixVQUFVLENBQUMsSUFBWTtJQUNyQyxJQUFNLElBQUksR0FBRyxlQUFlLEVBQW1CLENBQUMsR0FBRyxFQUFFLENBQUM7SUFDdEQsSUFBSSxDQUFDLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxLQUFLLEtBQUssSUFBSSxDQUFDLEVBQUU7UUFDbEMsT0FBTyxFQUFFLENBQUMsU0FBUyxDQUFDO1lBQ2xCLEtBQUssRUFBRSxNQUFNO1lBQ2IsT0FBTyxFQUFFLGVBQWU7WUFDeEIsVUFBVSxFQUFFLEtBQUs7WUFDakIsUUFBUTtnQkFDTixFQUFFLENBQUMsUUFBUSxDQUFDLEVBQUUsR0FBRyxFQUFFLG9CQUFvQixFQUFFLENBQUMsQ0FBQztZQUM3QyxDQUFDO1NBQ0YsQ0FBQyxDQUFDO0tBQ0o7SUFFRCxPQUFPLElBQUksQ0FBQyxPQUFPLElBQUksRUFBRSxDQUFDO0FBQzVCLENBQUM7QUFkRCxnQ0FjQztBQU9ELFNBQWdCLFNBQVMsQ0FBNkMsQ0FBSSxFQUFFLENBQWE7SUFBYixrQkFBQSxFQUFBLEtBQWE7SUFDakYsQ0FBRSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLHNCQUFjLEVBQUUsQ0FBQyxDQUFDLGNBQWMsQ0FBQyxJQUFJLEtBQUssQ0FBQztJQUUxRSxDQUFDLENBQUMsU0FBUyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUM7SUFDcEIsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsR0FBRyxHQUFHLGFBQWEsQ0FBQztJQUM5QixDQUFDLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQyxRQUFRLElBQUksQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDLENBQUM7SUFDbkMsQ0FBQyxDQUFDLElBQUksR0FBRyxDQUFDLENBQUMsSUFBSSxJQUFJLENBQUMsQ0FBQztJQUNyQixDQUFDLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQztJQUNaLENBQUMsQ0FBQyxXQUFXLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7SUFFMUIsT0FBTyxDQUFDLENBQUM7QUFDWCxDQUFDO0FBWEQsOEJBV0M7QUFFRCxTQUFnQixNQUFNLENBQUMsTUFBYyxFQUFFLE1BQWM7SUFDakQsSUFBRyxDQUFDLE1BQU0sRUFBRTtRQUNSLE9BQU8sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDekIsT0FBTyxPQUFPLENBQUMsT0FBTyxDQUFNLElBQUksQ0FBQyxDQUFDO0tBQ3JDO0lBRUQsSUFBRyxNQUFNLEtBQUssTUFBTSxFQUFFO1FBQ2xCLE9BQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztLQUNsQztJQUVELE9BQU8saUJBQVUsQ0FBUztRQUN0QixHQUFHLEVBQUUsV0FBVztRQUNoQixJQUFJLEVBQUUsTUFBTTtRQUNaLFFBQVEsRUFBRSxNQUFNO0tBQ25CLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBQSxHQUFHLElBQUksT0FBQSxHQUFHLENBQUMsSUFBSSxFQUFSLENBQVEsQ0FBQyxDQUFDO0FBQzdCLENBQUM7QUFmRCx3QkFlQztBQUVELFNBQVMsWUFBWSxDQUFDLENBQVM7SUFDN0IsSUFBTSxHQUFHLEdBQUcsQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQ3pCLE9BQU8sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUM7QUFDbEMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFVVEhFTlRJQ0FUSU9OIH0gZnJvbSAnLi4vY29uc3RhbnQvaW5kZXgnO1xuaW1wb3J0IHsgdXBsb2FkRmlsZSB9IGZyb20gJy4vaHR0cCc7XG5cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXRUaW1lKGRhdGU6IERhdGUpOiBzdHJpbmcge1xuICBjb25zdCB7eWVhciwgbW9udGgsIGRheSwgaG91ciwgbWludXRlfSA9IHJlc29sdmVUaW1lKGRhdGUpO1xuICByZXR1cm4gW3llYXIsIG1vbnRoLCBkYXldLm1hcChmb3JtYXROdW1iZXIpLmpvaW4oJy8nKSArICcgJyArIFtob3VyLCBtaW51dGVdLm1hcChmb3JtYXROdW1iZXIpLmpvaW4oJzonKTtcbn1cblxuLyoqXG4gKiDlsIbml7bpl7TliIbop6PkuLog5bm05pyI5pel77yM5pe25YiG56eSXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZXNvbHZlVGltZSh0aW1lOiBudW1iZXIgfCBEYXRlKSB7XG4gICAgY29uc3QgZGF0ZSA9IHRpbWUgaW5zdGFuY2VvZiBEYXRlID8gdGltZSA6IG5ldyBEYXRlKHRpbWUpO1xuXG4gICAgY29uc3QgeWVhciA9IGRhdGUuZ2V0RnVsbFllYXIoKTtcbiAgICBjb25zdCBtb250aCA9IGRhdGUuZ2V0TW9udGgoKSArIDE7XG4gICAgY29uc3QgZGF5ID0gZGF0ZS5nZXREYXRlKCk7XG4gICAgY29uc3QgaG91ciA9IGRhdGUuZ2V0SG91cnMoKTtcbiAgICBjb25zdCBtaW51dGUgPSBkYXRlLmdldE1pbnV0ZXMoKTtcblxuICAgIHJldHVybiB7eWVhciwgbW9udGgsIGRheSwgaG91ciwgbWludXRlfTtcbn1cblxuLyoqXG4gKiDojrflj5blvZPliY3pobXpnaLot6/nlLHlj4LmlbBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldE9wdGlvbnMocGF0aDogc3RyaW5nKSB7XG4gIGNvbnN0IHBhZ2UgPSBnZXRDdXJyZW50UGFnZXM8SUFueU9iamVjdCwgYW55PigpLnBvcCgpO1xuICBpZiAoIShwYWdlICYmIHBhZ2Uucm91dGUgPT09IHBhdGgpKSB7XG4gICAgcmV0dXJuIHd4LnNob3dNb2RhbCh7XG4gICAgICB0aXRsZTogJ+mdnuazleiuv+mXricsXG4gICAgICBjb250ZW50OiAn6Lev55Sx5Y+C5pWw6ZSZ6K+v77yM5Y2z5bCG6L+U5Zue5Li76aG1JyxcbiAgICAgIHNob3dDYW5jZWw6IGZhbHNlLFxuICAgICAgY29tcGxldGUoKSB7XG4gICAgICAgIHd4LnJlTGF1bmNoKHsgdXJsOiAnL3BhZ2VzL2luZGV4L2luZGV4JyB9KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiBwYWdlLm9wdGlvbnMgfHwge307XG59XG5cbi8qKlxuICog5bCG5LuO5pyN5Yqh5Zmo6I635Y+W55qE5pWw5o2u5aSE55CG5oiQ6ZyA6KaB55qE5pWw5o2u5qC85byPXG4gKiBAcGFyYW0gdiDmupDmlbDmja5cbiAqIEBwYXJhbSBpIOa6kOaVsOaNruWcqOaVsOaNruWIl+ihqOS4reeahOe0ouW8lVxuICovXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VEYXRhPFQgZXh0ZW5kcyBJQWN0aXZlIHwgSUNvbW1vZGl0eSB8IElNZXJjaGFudD4odjogVCwgaTogbnVtYmVyID0gMCk6IFQge1xuICAoPGFueT52KS5hdXRoU3RyID0gUmVmbGVjdC5nZXQoQVVUSEVOVElDQVRJT04sIHYuYXV0aGVudGljYXRpb24pIHx8ICfmnKrorqTor4EnO1xuXG4gIHYub3JpZ2luSW1nID0gdi5pbWc7IC8vIOS/neWtmOWOn+Wni+WbvueJh1xuICB2LmltZyA9IHYuaW1nICsgJz90aHVtYj10cnVlJzsgLy8g6I635Y+W5Y6L57yp5Zu+54mH6Lev5b6EXG4gIHYuc2lnbiA9IHYuYXR0ZW5kZWQgfHwgdi5zaWduIHx8IDA7IC8vIOiuvue9ruW3suWFkeaNoi/lj4LliqDpu5jorqTlgLxcbiAgdi5zaXplID0gdi5zaXplIHx8IDA7IC8vIOiuvue9ruWPr+WFkeaNoi/lj4LliqDpu5jorqTlgLxcbiAgdi5pbmRleCA9IGk7IC8vIOiuvue9rue0ouW8lVxuICB2LmlzQ29sbGVjdGVkID0gISF2Lmxpa2VkOyAvLyDovazljJbmmK/lkKbmlLbol48v5YWz5rOo5a2X5q615ZCNKOivpeWtl+auteaYr+WJjeerr+WujOaIkOWQjuacjeWKoeerr+aJjeWcqOi/lOWbnuaVsOaNruS4rea3u+WKoOeahClcblxuICByZXR1cm4gdjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVwbG9hZChuZXdTcmM6IHN0cmluZywgb2xkU3JjOiBzdHJpbmcpOiBQcm9taXNlPHN0cmluZz4ge1xuICAgIGlmKCFuZXdTcmMpIHtcbiAgICAgICAgY29uc29sZS53YXJuKCfmlofku7bot6/lvoTkuI3og73kuLrnqbonKTtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSg8YW55Pm51bGwpO1xuICAgIH1cblxuICAgIGlmKG9sZFNyYyA9PT0gbmV3U3JjKSB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUobmV3U3JjKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdXBsb2FkRmlsZTxzdHJpbmc+KHtcbiAgICAgICAgdXJsOiAnL2FwaS9maWxlJyxcbiAgICAgICAgbmFtZTogJ2ZpbGUnLFxuICAgICAgICBmaWxlUGF0aDogbmV3U3JjXG4gICAgfSkudGhlbihyZXMgPT4gcmVzLmRhdGEpO1xufVxuXG5mdW5jdGlvbiBmb3JtYXROdW1iZXIobjogbnVtYmVyKSB7XG4gIGNvbnN0IHN0ciA9IG4udG9TdHJpbmcoKTtcbiAgcmV0dXJuIHN0clsxXSA/IHN0ciA6ICcwJyArIHN0cjtcbn1cbiJdfQ==