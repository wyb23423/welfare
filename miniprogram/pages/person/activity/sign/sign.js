"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var status_1 = require("../../../../constant/status");
var http_1 = require("../../../../utils/http");
Page({
    id: 0,
    data: {
        auditing: [],
        handled: [],
        STATUS: {
            AUDITING: status_1.SIGN_STATUS.AUDITING,
            AWAIT: status_1.SIGN_STATUS.AWAIT,
            REFUSE: status_1.SIGN_STATUS.REFUSE
        }
    },
    onLoad: function (query) {
        var _this = this;
        var activityId = this.id = +query.id;
        http_1.request({
            url: '/api/activity/auditList',
            data: { activityId: activityId }
        })
            .then(function (_a) {
            var list = _a.data;
            var auditing = [];
            var handled = [];
            list.forEach(function (v) {
                if (v.status === status_1.SIGN_STATUS.AUDITING) {
                    auditing.push(v);
                }
                else {
                    handled.push(v);
                }
            });
            _this.setData({ handled: handled, auditing: auditing });
        })
            .catch(console.log);
    },
    doAuit: function (e) {
        var _this = this;
        var isOk = !!e.target.dataset.ok;
        var index = e.currentTarget.dataset.index;
        wx.showModal({
            title: this.data.auditing[index].name,
            content: (!isOk ? '拒绝' : '同意') + '该用户参加该活动?',
            success: function (_a) {
                var confirm = _a.confirm;
                return confirm && _this._doAuit(isOk, index);
            }
        });
    },
    _doAuit: function (isOk, index) {
        var _this = this;
        var _a = this.data, auditing = _a.auditing, handled = _a.handled;
        http_1.request({
            url: '/api/activity/audit',
            data: {
                flag: isOk,
                activityId: this.id,
                userId: auditing[index].userId
            }
        })
            .then(function () {
            var _a;
            wx.showToast({ title: '操作成功' });
            var item = auditing.splice(index, 1)[0];
            item.status = isOk ? status_1.SIGN_STATUS.AWAIT : status_1.SIGN_STATUS.REFUSE;
            _this.setData((_a = { auditing: auditing }, _a["handled[" + handled.length + "]"] = item, _a));
        })
            .catch(console.log);
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lnbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInNpZ24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxzREFBMEQ7QUFDMUQsK0NBQWlEO0FBU2pELElBQUksQ0FBQztJQUNELEVBQUUsRUFBRSxDQUFDO0lBQ0wsSUFBSSxFQUFFO1FBQ0YsUUFBUSxFQUFZLEVBQUU7UUFDdEIsT0FBTyxFQUFZLEVBQUU7UUFDckIsTUFBTSxFQUFFO1lBQ0osUUFBUSxFQUFFLG9CQUFXLENBQUMsUUFBUTtZQUM5QixLQUFLLEVBQUUsb0JBQVcsQ0FBQyxLQUFLO1lBQ3hCLE1BQU0sRUFBRSxvQkFBVyxDQUFDLE1BQU07U0FDN0I7S0FDSjtJQUNELE1BQU0sWUFBQyxLQUFtQjtRQUExQixpQkFxQkM7UUFwQkcsSUFBTSxVQUFVLEdBQUcsSUFBSSxDQUFDLEVBQUUsR0FBRyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUM7UUFDdkMsY0FBTyxDQUFXO1lBQ2QsR0FBRyxFQUFFLHlCQUF5QjtZQUM5QixJQUFJLEVBQUUsRUFBRSxVQUFVLFlBQUEsRUFBRTtTQUN2QixDQUFDO2FBQ0csSUFBSSxDQUFDLFVBQUMsRUFBWTtnQkFBWCxjQUFVO1lBQ2QsSUFBTSxRQUFRLEdBQWEsRUFBRSxDQUFDO1lBQzlCLElBQU0sT0FBTyxHQUFhLEVBQUUsQ0FBQztZQUU3QixJQUFJLENBQUMsT0FBTyxDQUFDLFVBQUEsQ0FBQztnQkFDVixJQUFHLENBQUMsQ0FBQyxNQUFNLEtBQUssb0JBQVcsQ0FBQyxRQUFRLEVBQUU7b0JBQ2xDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7aUJBQ3BCO3FCQUFNO29CQUNILE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7aUJBQ25CO1lBQ0wsQ0FBQyxDQUFDLENBQUM7WUFFSCxLQUFJLENBQUMsT0FBUSxDQUFDLEVBQUMsT0FBTyxTQUFBLEVBQUUsUUFBUSxVQUFBLEVBQUMsQ0FBQyxDQUFDO1FBQ3ZDLENBQUMsQ0FBQzthQUNELEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDNUIsQ0FBQztJQUNELE1BQU0sWUFBQyxDQUE0QztRQUFuRCxpQkFTQztRQVJHLElBQU0sSUFBSSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUM7UUFDbkMsSUFBTSxLQUFLLEdBQUcsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDO1FBRTVDLEVBQUUsQ0FBQyxTQUFTLENBQUM7WUFDVCxLQUFLLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsSUFBSTtZQUNyQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxXQUFXO1lBQzVDLE9BQU8sRUFBRSxVQUFDLEVBQVM7b0JBQVIsb0JBQU87Z0JBQU0sT0FBQSxPQUFPLElBQUksS0FBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDO1lBQXBDLENBQW9DO1NBQy9ELENBQUMsQ0FBQztJQUNQLENBQUM7SUFDRCxPQUFPLFlBQUMsSUFBYSxFQUFFLEtBQWE7UUFBcEMsaUJBa0JDO1FBakJTLElBQUEsY0FBK0IsRUFBOUIsc0JBQVEsRUFBRSxvQkFBb0IsQ0FBQztRQUV0QyxjQUFPLENBQUM7WUFDSixHQUFHLEVBQUUscUJBQXFCO1lBQzFCLElBQUksRUFBRTtnQkFDRixJQUFJLEVBQUUsSUFBSTtnQkFDVixVQUFVLEVBQUUsSUFBSSxDQUFDLEVBQUU7Z0JBQ25CLE1BQU0sRUFBRSxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsTUFBTTthQUNqQztTQUNKLENBQUM7YUFDRCxJQUFJLENBQUM7O1lBQ0YsRUFBRSxDQUFDLFNBQVMsQ0FBQyxFQUFDLEtBQUssRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDO1lBQy9CLElBQU0sSUFBSSxHQUFHLFFBQVEsQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzFDLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxvQkFBVyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsb0JBQVcsQ0FBQyxNQUFNLENBQUM7WUFDNUQsS0FBSSxDQUFDLE9BQVEsU0FBRSxRQUFRLFVBQUEsSUFBRSxHQUFDLGFBQVcsT0FBTyxDQUFDLE1BQU0sTUFBRyxJQUFHLElBQUksTUFBRSxDQUFDO1FBQ3BFLENBQUMsQ0FBQzthQUNELEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDeEIsQ0FBQztDQUNKLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNJR05fU1RBVFVTIH0gZnJvbSAnLi4vLi4vLi4vLi4vY29uc3RhbnQvc3RhdHVzJztcclxuaW1wb3J0IHsgcmVxdWVzdCB9IGZyb20gJy4uLy4uLy4uLy4uL3V0aWxzL2h0dHAnO1xyXG5cclxuaW50ZXJmYWNlIEVuSW5mbyB7XHJcbiAgICBuYW1lOiBzdHJpbmc7XHJcbiAgICBwaG9uZTogc3RyaW5nO1xyXG4gICAgdXNlcklkOiBzdHJpbmc7XHJcbiAgICBzdGF0dXM6IFNJR05fU1RBVFVTO1xyXG59XHJcblxyXG5QYWdlKHtcclxuICAgIGlkOiAwLFxyXG4gICAgZGF0YToge1xyXG4gICAgICAgIGF1ZGl0aW5nOiA8RW5JbmZvW10+W10sIC8vIOW+heWuoeaguFxyXG4gICAgICAgIGhhbmRsZWQ6IDxFbkluZm9bXT5bXSwgLy8g5bey5aSE55CGXHJcbiAgICAgICAgU1RBVFVTOiB7XHJcbiAgICAgICAgICAgIEFVRElUSU5HOiBTSUdOX1NUQVRVUy5BVURJVElORyxcclxuICAgICAgICAgICAgQVdBSVQ6IFNJR05fU1RBVFVTLkFXQUlULFxyXG4gICAgICAgICAgICBSRUZVU0U6IFNJR05fU1RBVFVTLlJFRlVTRVxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBvbkxvYWQocXVlcnk6IHtpZDogc3RyaW5nfSkge1xyXG4gICAgICAgIGNvbnN0IGFjdGl2aXR5SWQgPSB0aGlzLmlkID0gK3F1ZXJ5LmlkO1xyXG4gICAgICAgIHJlcXVlc3Q8RW5JbmZvW10+KHtcclxuICAgICAgICAgICAgdXJsOiAnL2FwaS9hY3Rpdml0eS9hdWRpdExpc3QnLFxyXG4gICAgICAgICAgICBkYXRhOiB7IGFjdGl2aXR5SWQgfVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgICAgIC50aGVuKCh7ZGF0YTogbGlzdH0pID0+IHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGF1ZGl0aW5nOiBFbkluZm9bXSA9IFtdO1xyXG4gICAgICAgICAgICAgICAgY29uc3QgaGFuZGxlZDogRW5JbmZvW10gPSBbXTtcclxuXHJcbiAgICAgICAgICAgICAgICBsaXN0LmZvckVhY2godiA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYodi5zdGF0dXMgPT09IFNJR05fU1RBVFVTLkFVRElUSU5HKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGF1ZGl0aW5nLnB1c2godik7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaGFuZGxlZC5wdXNoKHYpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgICAgIHRoaXMuc2V0RGF0YSEoe2hhbmRsZWQsIGF1ZGl0aW5nfSk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC5jYXRjaChjb25zb2xlLmxvZyk7XHJcbiAgICB9LFxyXG4gICAgZG9BdWl0KGU6IEJhc2VFdmVudDx7b2s/OiBzdHJpbmd9LCB7aW5kZXg6IG51bWJlcn0+KSB7XHJcbiAgICAgICAgY29uc3QgaXNPayA9ICEhZS50YXJnZXQuZGF0YXNldC5vaztcclxuICAgICAgICBjb25zdCBpbmRleCA9IGUuY3VycmVudFRhcmdldC5kYXRhc2V0LmluZGV4O1xyXG5cclxuICAgICAgICB3eC5zaG93TW9kYWwoe1xyXG4gICAgICAgICAgICB0aXRsZTogdGhpcy5kYXRhLmF1ZGl0aW5nW2luZGV4XS5uYW1lLFxyXG4gICAgICAgICAgICBjb250ZW50OiAoIWlzT2sgPyAn5ouS57udJyA6ICflkIzmhI8nKSArICfor6XnlKjmiLflj4LliqDor6XmtLvliqg/JyxcclxuICAgICAgICAgICAgc3VjY2VzczogKHtjb25maXJtfSkgPT4gY29uZmlybSAmJiB0aGlzLl9kb0F1aXQoaXNPaywgaW5kZXgpXHJcbiAgICAgICAgfSk7XHJcbiAgICB9LFxyXG4gICAgX2RvQXVpdChpc09rOiBib29sZWFuLCBpbmRleDogbnVtYmVyKSB7XHJcbiAgICAgICAgY29uc3Qge2F1ZGl0aW5nLCBoYW5kbGVkfSA9IHRoaXMuZGF0YTtcclxuXHJcbiAgICAgICAgcmVxdWVzdCh7XHJcbiAgICAgICAgICAgIHVybDogJy9hcGkvYWN0aXZpdHkvYXVkaXQnLFxyXG4gICAgICAgICAgICBkYXRhOiB7XHJcbiAgICAgICAgICAgICAgICBmbGFnOiBpc09rLFxyXG4gICAgICAgICAgICAgICAgYWN0aXZpdHlJZDogdGhpcy5pZCxcclxuICAgICAgICAgICAgICAgIHVzZXJJZDogYXVkaXRpbmdbaW5kZXhdLnVzZXJJZFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgICAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgICAgICAgIHd4LnNob3dUb2FzdCh7dGl0bGU6ICfmk43kvZzmiJDlip8nIH0pO1xyXG4gICAgICAgICAgICBjb25zdCBpdGVtID0gYXVkaXRpbmcuc3BsaWNlKGluZGV4LCAxKVswXTtcclxuICAgICAgICAgICAgaXRlbS5zdGF0dXMgPSBpc09rID8gU0lHTl9TVEFUVVMuQVdBSVQgOiBTSUdOX1NUQVRVUy5SRUZVU0U7XHJcbiAgICAgICAgICAgIHRoaXMuc2V0RGF0YSEoe2F1ZGl0aW5nLCBbYGhhbmRsZWRbJHtoYW5kbGVkLmxlbmd0aH1dYF06IGl0ZW19KTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIC5jYXRjaChjb25zb2xlLmxvZyk7XHJcbiAgICB9XHJcbn0pO1xyXG4iXX0=