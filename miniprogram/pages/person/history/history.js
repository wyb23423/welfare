"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var http_1 = require("../../../utils/http");
var constant_1 = require("../../../constant");
Page({
    data: {
        history: [],
        type: ''
    },
    onLoad: function (query) {
        this.data.type = query.type;
        var type = "_" + query.type;
        this[type] && this[type]();
        var titles = {
            await: '待参加',
            auditing: '待审核',
            complete: '已参加',
            toEvaluate: '待评价',
            initiate: '我的发起',
            collection: '我的收藏'
        };
        wx.setNavigationBarTitle({
            title: titles[query.type]
        });
    },
    delete: function (e) {
        var id = +e.target.dataset.id;
        wx.showModal({
            content: '删除该活动？',
            success: function (res) {
                if (res.confirm) {
                    http_1.request({
                        url: '/api/activity',
                        method: 'DELETE',
                        data: { id: id }
                    })
                        .then(function () { return wx.showToast({ title: '删除成功' }); })
                        .catch(console.log);
                }
            }
        });
    },
    none: function () {
    },
    _await: function () {
        this._request('/api/participation/await');
    },
    _auditing: function () {
        this._request('/api/participation/auditing');
    },
    _complete: function () {
        this._request('/api/participation/complete');
    },
    _request: function (url) {
        var _this = this;
        http_1.request({ url: url })
            .then(function (_a) {
            var data = _a.data;
            return _this.setData({ type: _this.data.type, history: data.map(constant_1.parseData) });
        })
            .catch(console.log);
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGlzdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImhpc3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSw0Q0FBOEM7QUFDOUMsOENBQThDO0FBSTlDLElBQUksQ0FBQztJQUNELElBQUksRUFBRTtRQUNGLE9BQU8sRUFBRSxFQUFlO1FBQ3hCLElBQUksRUFBRSxFQUFFO0tBQ1g7SUFDRCxNQUFNLFlBQUMsS0FBaUI7UUFDcEIsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBQztRQUU1QixJQUFNLElBQUksR0FBZ0IsTUFBSSxLQUFLLENBQUMsSUFBTSxDQUFDO1FBQzNDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQztRQUUzQixJQUFNLE1BQU0sR0FBUTtZQUNoQixLQUFLLEVBQUUsS0FBSztZQUNaLFFBQVEsRUFBRSxLQUFLO1lBQ2YsUUFBUSxFQUFFLEtBQUs7WUFDZixVQUFVLEVBQUUsS0FBSztZQUNqQixRQUFRLEVBQUUsTUFBTTtZQUNoQixVQUFVLEVBQUUsTUFBTTtTQUNyQixDQUFDO1FBQ0YsRUFBRSxDQUFDLHFCQUFxQixDQUFDO1lBQ3JCLEtBQUssRUFBRSxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQztTQUM1QixDQUFDLENBQUM7SUFDUCxDQUFDO0lBQ0QsTUFBTSxZQUFDLENBQWU7UUFDbEIsSUFBTSxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUM7UUFDaEMsRUFBRSxDQUFDLFNBQVMsQ0FBQztZQUNULE9BQU8sRUFBRSxRQUFRO1lBQ2pCLE9BQU8sWUFBQyxHQUFHO2dCQUNQLElBQUksR0FBRyxDQUFDLE9BQU8sRUFBRTtvQkFDYixjQUFPLENBQUM7d0JBQ0osR0FBRyxFQUFFLGVBQWU7d0JBQ3BCLE1BQU0sRUFBRSxRQUFRO3dCQUNoQixJQUFJLEVBQUUsRUFBRSxFQUFFLElBQUEsRUFBRTtxQkFDZixDQUFDO3lCQUNHLElBQUksQ0FBQyxjQUFNLE9BQUEsRUFBRSxDQUFDLFNBQVMsQ0FBQyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUEvQixDQUErQixDQUFDO3lCQUMzQyxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO2lCQUMzQjtZQUNMLENBQUM7U0FDSixDQUFDLENBQUM7SUFDUCxDQUFDO0lBQ0QsSUFBSTtJQUVKLENBQUM7SUFHRCxNQUFNO1FBQ0YsSUFBSSxDQUFDLFFBQVEsQ0FBQywwQkFBMEIsQ0FBQyxDQUFDO0lBQzlDLENBQUM7SUFDRCxTQUFTO1FBQ0wsSUFBSSxDQUFDLFFBQVEsQ0FBQyw2QkFBNkIsQ0FBQyxDQUFDO0lBQ2pELENBQUM7SUFDRCxTQUFTO1FBQ0wsSUFBSSxDQUFDLFFBQVEsQ0FBQyw2QkFBNkIsQ0FBQyxDQUFDO0lBQ2pELENBQUM7SUFDRCxRQUFRLFlBQUMsR0FBVztRQUFwQixpQkFJQztRQUhHLGNBQU8sQ0FBWSxFQUFFLEdBQUcsS0FBQSxFQUFFLENBQUM7YUFDdEIsSUFBSSxDQUFDLFVBQUMsRUFBUTtnQkFBTixjQUFJO1lBQU8sT0FBQSxLQUFJLENBQUMsT0FBUSxDQUFDLEVBQUUsSUFBSSxFQUFFLEtBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLG9CQUFTLENBQUMsRUFBRSxDQUFDO1FBQXJFLENBQXFFLENBQUM7YUFDekYsS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUM1QixDQUFDO0NBQ0osQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVxdWVzdCB9IGZyb20gJy4uLy4uLy4uL3V0aWxzL2h0dHAnO1xyXG5pbXBvcnQgeyBwYXJzZURhdGEgfSBmcm9tICcuLi8uLi8uLi9jb25zdGFudCc7XHJcblxyXG50eXBlIEhpc3RvcnlUeXBlID0gJ19hd2FpdCcgfCAnX2F1ZGl0aW5nJyB8ICdfY29tcGxldGUnO1xyXG5cclxuUGFnZSh7XHJcbiAgICBkYXRhOiB7XHJcbiAgICAgICAgaGlzdG9yeTogW10gYXMgSUFjdGl2ZVtdLFxyXG4gICAgICAgIHR5cGU6ICcnXHJcbiAgICB9LFxyXG4gICAgb25Mb2FkKHF1ZXJ5OiBJQW55T2JqZWN0KSB7XHJcbiAgICAgICAgdGhpcy5kYXRhLnR5cGUgPSBxdWVyeS50eXBlO1xyXG5cclxuICAgICAgICBjb25zdCB0eXBlID0gPEhpc3RvcnlUeXBlPmBfJHtxdWVyeS50eXBlfWA7XHJcbiAgICAgICAgdGhpc1t0eXBlXSAmJiB0aGlzW3R5cGVdKCk7XHJcblxyXG4gICAgICAgIGNvbnN0IHRpdGxlczogYW55ID0ge1xyXG4gICAgICAgICAgICBhd2FpdDogJ+W+heWPguWKoCcsXHJcbiAgICAgICAgICAgIGF1ZGl0aW5nOiAn5b6F5a6h5qC4JyxcclxuICAgICAgICAgICAgY29tcGxldGU6ICflt7Llj4LliqAnLFxyXG4gICAgICAgICAgICB0b0V2YWx1YXRlOiAn5b6F6K+E5Lu3JyxcclxuICAgICAgICAgICAgaW5pdGlhdGU6ICfmiJHnmoTlj5HotbcnLFxyXG4gICAgICAgICAgICBjb2xsZWN0aW9uOiAn5oiR55qE5pS26JePJ1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgd3guc2V0TmF2aWdhdGlvbkJhclRpdGxlKHtcclxuICAgICAgICAgICAgdGl0bGU6IHRpdGxlc1txdWVyeS50eXBlXVxyXG4gICAgICAgIH0pO1xyXG4gICAgfSxcclxuICAgIGRlbGV0ZShlOiBXeFRvdWNoRXZlbnQpIHtcclxuICAgICAgICBjb25zdCBpZCA9ICtlLnRhcmdldC5kYXRhc2V0LmlkO1xyXG4gICAgICAgIHd4LnNob3dNb2RhbCh7XHJcbiAgICAgICAgICAgIGNvbnRlbnQ6ICfliKDpmaTor6XmtLvliqjvvJ8nLFxyXG4gICAgICAgICAgICBzdWNjZXNzKHJlcykge1xyXG4gICAgICAgICAgICAgICAgaWYgKHJlcy5jb25maXJtKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVxdWVzdCh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHVybDogJy9hcGkvYWN0aXZpdHknLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBtZXRob2Q6ICdERUxFVEUnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiB7IGlkIH1cclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAudGhlbigoKSA9PiB3eC5zaG93VG9hc3QoeyB0aXRsZTogJ+WIoOmZpOaIkOWKnycgfSkpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC5jYXRjaChjb25zb2xlLmxvZyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH0sXHJcbiAgICBub25lKCkge1xyXG4gICAgICAgIC8vXHJcbiAgICB9LFxyXG5cclxuICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICAgIF9hd2FpdCgpIHtcclxuICAgICAgICB0aGlzLl9yZXF1ZXN0KCcvYXBpL3BhcnRpY2lwYXRpb24vYXdhaXQnKTtcclxuICAgIH0sXHJcbiAgICBfYXVkaXRpbmcoKSB7XHJcbiAgICAgICAgdGhpcy5fcmVxdWVzdCgnL2FwaS9wYXJ0aWNpcGF0aW9uL2F1ZGl0aW5nJyk7XHJcbiAgICB9LFxyXG4gICAgX2NvbXBsZXRlKCkge1xyXG4gICAgICAgIHRoaXMuX3JlcXVlc3QoJy9hcGkvcGFydGljaXBhdGlvbi9jb21wbGV0ZScpO1xyXG4gICAgfSxcclxuICAgIF9yZXF1ZXN0KHVybDogc3RyaW5nKSB7XHJcbiAgICAgICAgcmVxdWVzdDxJQWN0aXZlW10+KHsgdXJsIH0pXHJcbiAgICAgICAgICAgIC50aGVuKCh7IGRhdGEgfSkgPT4gdGhpcy5zZXREYXRhISh7IHR5cGU6IHRoaXMuZGF0YS50eXBlLCBoaXN0b3J5OiBkYXRhLm1hcChwYXJzZURhdGEpIH0pKVxyXG4gICAgICAgICAgICAuY2F0Y2goY29uc29sZS5sb2cpO1xyXG4gICAgfVxyXG59KTtcclxuIl19