"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var status_1 = require("../../../../constant/status");
var http_1 = require("../../../../utils/http");
Page({
    id: 0,
    data: {
        auditing: [],
        join: [],
        refuse: [],
        STATUS: {
            AUDITING: status_1.SIGN_STATUS.AUDITING,
            AWAIT: status_1.SIGN_STATUS.AWAIT,
            JOINING: status_1.SIGN_STATUS.JOINING,
            REFUSE: status_1.SIGN_STATUS.REFUSE
        }
    },
    onLoad: function (query) {
        var _this = this;
        var activityId = this.id = +query.id;
        http_1.request({
            url: '/api/activity/participation/auditList',
            data: { activityId: activityId }
        })
            .then(function (_a) {
            var list = _a.data;
            var auditing = [];
            var refuse = [];
            var join = [];
            list.forEach(function (v) {
                if (v.status === status_1.SIGN_STATUS.AUDITING) {
                    auditing.push(v);
                }
                else if (v.status === status_1.SIGN_STATUS.REFUSE) {
                    refuse.push(v);
                }
                else {
                    join.push(v);
                }
            });
            _this.setData({ refuse: refuse, auditing: auditing, join: join });
        })
            .catch(console.log);
    },
    doSign: function (_a) {
        var _this = this;
        var index = _a.currentTarget.dataset.index;
        var item = this.data.join[index];
        if (!item) {
            return;
        }
        wx.showModal({
            title: item.name,
            content: '活动签到确认',
            success: function (_a) {
                var confirm = _a.confirm;
                var _b;
                if (confirm) {
                    _this.setData((_b = {},
                        _b["join[" + index + "].status"] = status_1.SIGN_STATUS.JOINING,
                        _b));
                }
            }
        });
    },
    doAuit: function (e) {
        var _this = this;
        var isOk = !!e.target.dataset.ok;
        var index = e.currentTarget.dataset.index;
        wx.showModal({
            title: this.data.auditing[index].name,
            content: (!isOk ? '拒绝' : '同意') + '该用户参加该活动?',
            success: function (_a) {
                var confirm = _a.confirm;
                return confirm && _this._doAuit(isOk, index);
            }
        });
    },
    _doAuit: function (isOk, index) {
        var _this = this;
        var _a = this.data, auditing = _a.auditing, refuse = _a.refuse, join = _a.join;
        http_1.request({
            url: '/api/activity/participation/audit',
            data: {
                flag: isOk,
                activityId: this.id,
                userId: auditing[index].userId
            }
        })
            .then(function () {
            wx.showToast({ title: '操作成功' });
            var item = auditing.splice(index, 1)[0];
            item.status = isOk ? status_1.SIGN_STATUS.AWAIT : status_1.SIGN_STATUS.REFUSE;
            (isOk ? join : refuse).push(item);
            _this.setData({ auditing: auditing, join: join, refuse: refuse });
        })
            .catch(console.log);
    }
});
//# sourceMappingURL=data:application/json;base64,