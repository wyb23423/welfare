"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function getLayoutData(layout, time) {
    var layoutData = [];
    var argObj = getArgObj(time);
    layout.split(',').forEach(function (v) {
        var key = v.trim();
        var arg = argObj[key];
        if (arg) {
            layoutData.push(createDateArr(arg[0], arg[1], arg[2]));
            delete argObj[key];
        }
    });
    return layoutData;
}
exports.getLayoutData = getLayoutData;
function calcSelIndex(layoutData, time) {
    var date = time ? new Date(time) : new Date();
    return layoutData.map(function (v) {
        return v.findIndex(function (item) {
            var _a = item.match(/(\d+)([^\d]){1}/), num = _a[1], unit = _a[2];
            switch (unit) {
                case '年':
                    return +num === date.getFullYear();
                case '月':
                    return +num === date.getMonth() + 1;
                case '日':
                    return +num === date.getDate();
                case '时':
                    return +num === date.getHours();
                case '分':
                    return +num === date.getMinutes();
                case '秒':
                    return +num === date.getSeconds();
                default: return true;
            }
        });
    });
}
exports.calcSelIndex = calcSelIndex;
function formatTime(layout, timeStamp) {
    if (!timeStamp) {
        return '';
    }
    var date = new Date(timeStamp);
    var dateArr = [];
    if (layout.includes('year')) {
        dateArr.push(date.getFullYear());
    }
    if (layout.includes('month')) {
        dateArr.push(fixed2Len(date.getMonth() + 1));
    }
    if (layout.includes('day')) {
        dateArr.push(fixed2Len(date.getDate()));
    }
    var timeArr = [];
    if (layout.includes('hours')) {
        timeArr.push(fixed2Len(date.getHours()));
    }
    if (layout.includes('minutes')) {
        timeArr.push(fixed2Len(date.getMinutes()));
    }
    if (layout.includes('seconds')) {
        timeArr.push(fixed2Len(date.getSeconds()));
    }
    return (dateArr.join('/') + " " + timeArr.join(':')).trim();
}
exports.formatTime = formatTime;
function createDateArr(count, unit, start) {
    if (start === void 0) { start = 1; }
    return new Array(count).fill(start).map(function (v, i) { return fixed2Len(v + i) + unit; });
}
function fixed2Len(num) {
    return num.toString().padStart(2, '0');
}
function getArgObj(time) {
    var date = time ? new Date(time) : new Date();
    var year = date.getFullYear();
    return {
        year: [20, '年', year - 9],
        month: [12, '月'],
        day: [new Date(year, date.getMonth() + 1, 0).getDate(), '日'],
        hours: [24, '时', 0],
        minutes: [60, '分', 0],
        seconds: [60, '秒', 0]
    };
}
//# sourceMappingURL=data:application/json;base64,