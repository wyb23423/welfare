"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var http_1 = require("./utils/http");
var store_1 = require("./constant/store");
var ROLE_MERCHANT = 'ROLE_MERCHANT';
var ROLE_OFFICIAL = 'ROLE_OFFICIAL';
App({
    onLaunch: function () {
        wx.login({
            success: function (_a) {
                var code = _a.code;
                http_1.request({
                    url: '/api/login',
                    method: 'POST',
                    data: { code: code },
                    success: function (res) {
                        if (res.header) {
                            if ('Set-Cookie' in res.header) {
                                wx.setStorageSync(store_1.COOKIE, res.header['Set-Cookie']);
                            }
                            else if ('set-cookie' in res.header) {
                                wx.setStorageSync(store_1.COOKIE, res.header['set-cookie']);
                            }
                        }
                    }
                })
                    .then(function (_a) {
                    var _b = _a.data, username = _b.username, authorities = _b.authorities;
                    wx.setStorage({
                        key: store_1.USER_NAME,
                        data: username
                    });
                    wx.setStorage({
                        key: store_1.IS_MERCHANT,
                        data: authorities.some(function (v) { return v.authority === ROLE_MERCHANT; })
                    });
                    wx.setStorage({
                        key: store_1.IS_OFFICIAL,
                        data: authorities.some(function (v) { return v.authority === ROLE_OFFICIAL; })
                    });
                })
                    .catch(console.log);
            },
            fail: console.log
        });
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYXBwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEscUNBQXVDO0FBQ3ZDLDBDQUErRTtBQU8vRSxJQUFNLGFBQWEsR0FBRyxlQUFlLENBQUM7QUFDdEMsSUFBTSxhQUFhLEdBQUcsZUFBZSxDQUFDO0FBR3RDLEdBQUcsQ0FBQztJQUNGLFFBQVE7UUFFTixFQUFFLENBQUMsS0FBSyxDQUFDO1lBQ1AsT0FBTyxFQUFFLFVBQUMsRUFBUTtvQkFBTixjQUFJO2dCQUNkLGNBQU8sQ0FBVztvQkFDaEIsR0FBRyxFQUFFLFlBQVk7b0JBQ2pCLE1BQU0sRUFBRSxNQUFNO29CQUNkLElBQUksRUFBRSxFQUFFLElBQUksTUFBQSxFQUFFO29CQUNkLE9BQU8sWUFBQyxHQUFHO3dCQUNULElBQUksR0FBRyxDQUFDLE1BQU0sRUFBRTs0QkFDZCxJQUFJLFlBQVksSUFBSSxHQUFHLENBQUMsTUFBTSxFQUFFO2dDQUM5QixFQUFFLENBQUMsY0FBYyxDQUFDLGNBQU0sRUFBUSxHQUFHLENBQUMsTUFBTyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUM7NkJBQzVEO2lDQUFNLElBQUksWUFBWSxJQUFJLEdBQUcsQ0FBQyxNQUFNLEVBQUU7Z0NBQ3JDLEVBQUUsQ0FBQyxjQUFjLENBQUMsY0FBTSxFQUFRLEdBQUcsQ0FBQyxNQUFPLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQzs2QkFDNUQ7eUJBQ0Y7b0JBQ0gsQ0FBQztpQkFDRixDQUFDO3FCQUNHLElBQUksQ0FBQyxVQUFDLEVBQStCO3dCQUE5QixZQUE2QixFQUF0QixzQkFBUSxFQUFFLDRCQUFXO29CQUVoQyxFQUFFLENBQUMsVUFBVSxDQUFDO3dCQUNWLEdBQUcsRUFBRSxpQkFBUzt3QkFDZCxJQUFJLEVBQUUsUUFBUTtxQkFDakIsQ0FBQyxDQUFDO29CQUVILEVBQUUsQ0FBQyxVQUFVLENBQUM7d0JBQ1YsR0FBRyxFQUFFLG1CQUFXO3dCQUNoQixJQUFJLEVBQUUsV0FBVyxDQUFDLElBQUksQ0FBQyxVQUFBLENBQUMsSUFBSSxPQUFBLENBQUMsQ0FBQyxTQUFTLEtBQUssYUFBYSxFQUE3QixDQUE2QixDQUFDO3FCQUM3RCxDQUFDLENBQUM7b0JBRUgsRUFBRSxDQUFDLFVBQVUsQ0FBQzt3QkFDVixHQUFHLEVBQUUsbUJBQVc7d0JBQ2hCLElBQUksRUFBRSxXQUFXLENBQUMsSUFBSSxDQUFDLFVBQUEsQ0FBQyxJQUFJLE9BQUEsQ0FBQyxDQUFDLFNBQVMsS0FBSyxhQUFhLEVBQTdCLENBQTZCLENBQUM7cUJBQzdELENBQUMsQ0FBQztnQkFDUCxDQUFDLENBQUM7cUJBQ0gsS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUN4QixDQUFDO1lBQ0QsSUFBSSxFQUFFLE9BQU8sQ0FBQyxHQUFHO1NBQ2xCLENBQUMsQ0FBQztJQUNMLENBQUM7Q0FDRixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZXF1ZXN0IH0gZnJvbSAnLi91dGlscy9odHRwJztcclxuaW1wb3J0IHsgQ09PS0lFLCBVU0VSX05BTUUsIElTX01FUkNIQU5ULCBJU19PRkZJQ0lBTCB9IGZyb20gJy4vY29uc3RhbnQvc3RvcmUnO1xyXG5cclxuaW50ZXJmYWNlIExvZ2luUmVzIHtcclxuICAgIHVzZXJuYW1lOiBzdHJpbmc7XHJcbiAgICBhdXRob3JpdGllczogQXJyYXk8e2F1dGhvcml0eTogc3RyaW5nfT47XHJcbn1cclxuXHJcbmNvbnN0IFJPTEVfTUVSQ0hBTlQgPSAnUk9MRV9NRVJDSEFOVCc7XHJcbmNvbnN0IFJPTEVfT0ZGSUNJQUwgPSAnUk9MRV9PRkZJQ0lBTCc7XHJcblxyXG4vLyBhcHAudHNcclxuQXBwKHtcclxuICBvbkxhdW5jaCgpIHtcclxuICAgIC8vIOeZu+W9lVxyXG4gICAgd3gubG9naW4oe1xyXG4gICAgICBzdWNjZXNzOiAoeyBjb2RlIH0pID0+IHtcclxuICAgICAgICByZXF1ZXN0PExvZ2luUmVzPih7XHJcbiAgICAgICAgICB1cmw6ICcvYXBpL2xvZ2luJyxcclxuICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLFxyXG4gICAgICAgICAgZGF0YTogeyBjb2RlIH0sXHJcbiAgICAgICAgICBzdWNjZXNzKHJlcykge1xyXG4gICAgICAgICAgICBpZiAocmVzLmhlYWRlcikge1xyXG4gICAgICAgICAgICAgIGlmICgnU2V0LUNvb2tpZScgaW4gcmVzLmhlYWRlcikge1xyXG4gICAgICAgICAgICAgICAgd3guc2V0U3RvcmFnZVN5bmMoQ09PS0lFLCAoPGFueT5yZXMuaGVhZGVyKVsnU2V0LUNvb2tpZSddKTtcclxuICAgICAgICAgICAgICB9IGVsc2UgaWYgKCdzZXQtY29va2llJyBpbiByZXMuaGVhZGVyKSB7XHJcbiAgICAgICAgICAgICAgICB3eC5zZXRTdG9yYWdlU3luYyhDT09LSUUsICg8YW55PnJlcy5oZWFkZXIpWydzZXQtY29va2llJ10pO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgICAgIC50aGVuKCh7ZGF0YToge3VzZXJuYW1lLCBhdXRob3JpdGllc319KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAvLyDnlKjmiLflkI1cclxuICAgICAgICAgICAgICAgIHd4LnNldFN0b3JhZ2Uoe1xyXG4gICAgICAgICAgICAgICAgICAgIGtleTogVVNFUl9OQU1FLFxyXG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IHVzZXJuYW1lXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIC8vIOaYr+WQpuWVhuWutijnu4Tnu4cpXHJcbiAgICAgICAgICAgICAgICB3eC5zZXRTdG9yYWdlKHtcclxuICAgICAgICAgICAgICAgICAgICBrZXk6IElTX01FUkNIQU5ULFxyXG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IGF1dGhvcml0aWVzLnNvbWUodiA9PiB2LmF1dGhvcml0eSA9PT0gUk9MRV9NRVJDSEFOVClcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgLy8g5piv5ZCm56S+5Yy6566h55CG5ZGYXHJcbiAgICAgICAgICAgICAgICB3eC5zZXRTdG9yYWdlKHtcclxuICAgICAgICAgICAgICAgICAgICBrZXk6IElTX09GRklDSUFMLFxyXG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IGF1dGhvcml0aWVzLnNvbWUodiA9PiB2LmF1dGhvcml0eSA9PT0gUk9MRV9PRkZJQ0lBTClcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgLmNhdGNoKGNvbnNvbGUubG9nKTtcclxuICAgICAgfSxcclxuICAgICAgZmFpbDogY29uc29sZS5sb2dcclxuICAgIH0pO1xyXG4gIH1cclxufSk7XHJcbiJdfQ==