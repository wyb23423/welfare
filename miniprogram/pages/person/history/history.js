"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var http_1 = require("../../../utils/http");
var util_1 = require("../../../utils/util");
Page({
    data: {
        history: [],
        type: '',
        tabType: 0,
        another: [],
        url: '/pages/activity/details/details'
    },
    onLoad: function (query) {
        this.data.type = query.type;
        var type = "_" + query.type;
        this[type] && this[type]();
        var titles = {
            await: '待参加',
            auditing: '待审核',
            complete: '已参加',
            evaluate: '待评价',
            initiate: '我的发起',
            collection: '我的收藏'
        };
        wx.setNavigationBarTitle({
            title: titles[query.type]
        });
    },
    delete: function (e) {
        var _this = this;
        var index = +e.target.dataset.index;
        var history = this.data.history;
        wx.showModal({
            content: this.data.type === 'collection' ? '取消收藏？' : '删除该活动？',
            success: function (res) {
                if (res.confirm) {
                    if (_this.data.type === 'collection') {
                        return _this._cancelCollect(index);
                    }
                    http_1.request({
                        url: '/api/activity',
                        method: 'DELETE',
                        data: { activityId: history[index].id }
                    })
                        .then(function () {
                        wx.showToast({ title: '删除成功' });
                        history.splice(index, 1);
                        _this.setData({ history: history });
                    })
                        .catch(console.log);
                }
            }
        });
    },
    none: function () {
    },
    switch: function (e) {
        this.data.tabType = +e.target.dataset.type;
        var another = this.data.another;
        this.data.another = this.data.history;
        if (another.length) {
            this.data.history = another;
            return this.setData(this.data);
        }
        this._collection();
    },
    _cancelCollect: function (index) {
        var _this = this;
        var history = this.data.history;
        http_1.request({
            url: '/api/like',
            method: 'DELETE',
            data: {
                targetId: history[index].id,
                type: this.data.tabType
            }
        })
            .then(function () {
            wx.showToast({ title: '取消搜藏成功' });
            history.splice(index, 1);
            _this.setData({ history: history });
        })
            .catch(console.log);
    },
    _await: function () {
        this._request('/api/activity/participation/list/await');
    },
    _auditing: function () {
        this._request('/api/activity/participation/list/auditing');
    },
    _complete: function () {
        this._request('/api/activity/participation/list/complete');
    },
    _evaluate: function () {
        this._request('/api/activity/participation/list/evaluate');
    },
    _initiate: function () {
        this._request('/api/activity/my');
    },
    _collection: function () {
        var _this = this;
        var tabType = this.data.tabType;
        http_1.request({
            url: '/api/like',
            data: { type: tabType }
        })
            .then(function (_a) {
            var data = _a.data;
            return _this.setData({
                history: data.map(util_1.parseData),
                type: _this.data.type,
                tabType: tabType,
                url: tabType ? '' : '/pages/activity/details/details'
            });
        })
            .catch(console.log);
    },
    _request: function (url) {
        var _this = this;
        http_1.request({ url: url })
            .then(function (_a) {
            var data = _a.data;
            return _this.setData({ type: _this.data.type, history: data.map(util_1.parseData) });
        })
            .catch(console.log);
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGlzdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImhpc3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSw0Q0FBOEM7QUFDOUMsNENBQWdEO0FBSWhELElBQUksQ0FBQztJQUNELElBQUksRUFBRTtRQUNGLE9BQU8sRUFBRSxFQUFpQztRQUMxQyxJQUFJLEVBQUUsRUFBRTtRQUNSLE9BQU8sRUFBRSxDQUFDO1FBQ1YsT0FBTyxFQUErQixFQUFFO1FBQ3hDLEdBQUcsRUFBRSxpQ0FBaUM7S0FDekM7SUFDRCxNQUFNLFlBQUMsS0FBaUI7UUFDcEIsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBQztRQUU1QixJQUFNLElBQUksR0FBZ0IsTUFBSSxLQUFLLENBQUMsSUFBTSxDQUFDO1FBQzNDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQztRQUUzQixJQUFNLE1BQU0sR0FBUTtZQUNoQixLQUFLLEVBQUUsS0FBSztZQUNaLFFBQVEsRUFBRSxLQUFLO1lBQ2YsUUFBUSxFQUFFLEtBQUs7WUFDZixRQUFRLEVBQUUsS0FBSztZQUNmLFFBQVEsRUFBRSxNQUFNO1lBQ2hCLFVBQVUsRUFBRSxNQUFNO1NBQ3JCLENBQUM7UUFDRixFQUFFLENBQUMscUJBQXFCLENBQUM7WUFDckIsS0FBSyxFQUFFLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDO1NBQzVCLENBQUMsQ0FBQztJQUNQLENBQUM7SUFDRCxNQUFNLFlBQUMsQ0FBZTtRQUF0QixpQkEwQkM7UUF6QkcsSUFBTSxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUM7UUFDdEMsSUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUM7UUFFbEMsRUFBRSxDQUFDLFNBQVMsQ0FBQztZQUNULE9BQU8sRUFBRSxJQUFJ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cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVxdWVzdCB9IGZyb20gJy4uLy4uLy4uL3V0aWxzL2h0dHAnO1xyXG5pbXBvcnQgeyBwYXJzZURhdGEgfSBmcm9tICcuLi8uLi8uLi91dGlscy91dGlsJztcclxuXHJcbnR5cGUgSGlzdG9yeVR5cGUgPSAnX2F3YWl0JyB8ICdfYXVkaXRpbmcnIHwgJ19jb21wbGV0ZSc7XHJcblxyXG5QYWdlKHtcclxuICAgIGRhdGE6IHtcclxuICAgICAgICBoaXN0b3J5OiBbXSBhcyBBcnJheTxJQWN0aXZlIHwgSUNvbW1vZGl0eT4sXHJcbiAgICAgICAgdHlwZTogJycsXHJcbiAgICAgICAgdGFiVHlwZTogMCxcclxuICAgICAgICBhbm90aGVyOiA8QXJyYXk8SUFjdGl2ZSB8IElDb21tb2RpdHk+PltdLFxyXG4gICAgICAgIHVybDogJy9wYWdlcy9hY3Rpdml0eS9kZXRhaWxzL2RldGFpbHMnXHJcbiAgICB9LFxyXG4gICAgb25Mb2FkKHF1ZXJ5OiBJQW55T2JqZWN0KSB7XHJcbiAgICAgICAgdGhpcy5kYXRhLnR5cGUgPSBxdWVyeS50eXBlO1xyXG5cclxuICAgICAgICBjb25zdCB0eXBlID0gPEhpc3RvcnlUeXBlPmBfJHtxdWVyeS50eXBlfWA7XHJcbiAgICAgICAgdGhpc1t0eXBlXSAmJiB0aGlzW3R5cGVdKCk7XHJcblxyXG4gICAgICAgIGNvbnN0IHRpdGxlczogYW55ID0ge1xyXG4gICAgICAgICAgICBhd2FpdDogJ+W+heWPguWKoCcsXHJcbiAgICAgICAgICAgIGF1ZGl0aW5nOiAn5b6F5a6h5qC4JyxcclxuICAgICAgICAgICAgY29tcGxldGU6ICflt7Llj4LliqAnLFxyXG4gICAgICAgICAgICBldmFsdWF0ZTogJ+W+heivhOS7tycsXHJcbiAgICAgICAgICAgIGluaXRpYXRlOiAn5oiR55qE5Y+R6LW3JyxcclxuICAgICAgICAgICAgY29sbGVjdGlvbjogJ+aIkeeahOaUtuiXjydcclxuICAgICAgICB9O1xyXG4gICAgICAgIHd4LnNldE5hdmlnYXRpb25CYXJUaXRsZSh7XHJcbiAgICAgICAgICAgIHRpdGxlOiB0aXRsZXNbcXVlcnkudHlwZV1cclxuICAgICAgICB9KTtcclxuICAgIH0sXHJcbiAgICBkZWxldGUoZTogV3hUb3VjaEV2ZW50KSB7XHJcbiAgICAgICAgY29uc3QgaW5kZXggPSArZS50YXJnZXQuZGF0YXNldC5pbmRleDtcclxuICAgICAgICBjb25zdCBoaXN0b3J5ID0gdGhpcy5kYXRhLmhpc3Rvcnk7XHJcblxyXG4gICAgICAgIHd4LnNob3dNb2RhbCh7XHJcbiAgICAgICAgICAgIGNvbnRlbnQ6IHRoaXMuZGF0YS50eXBlID09PSAnY29sbGVjdGlvbicgPyAn5Y+W5raI5pS26JeP77yfJyA6ICfliKDpmaTor6XmtLvliqjvvJ8nLFxyXG4gICAgICAgICAgICBzdWNjZXNzOiAocmVzKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAocmVzLmNvbmZpcm0pIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5kYXRhLnR5cGUgPT09ICdjb2xsZWN0aW9uJykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5fY2FuY2VsQ29sbGVjdChpbmRleCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICByZXF1ZXN0KHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiAnL2FwaS9hY3Rpdml0eScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1ldGhvZDogJ0RFTEVURScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IHsgYWN0aXZpdHlJZDogaGlzdG9yeVtpbmRleF0uaWQgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHd4LnNob3dUb2FzdCh7IHRpdGxlOiAn5Yig6Zmk5oiQ5YqfJyB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhpc3Rvcnkuc3BsaWNlKGluZGV4LCAxKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0RGF0YSEoeyBoaXN0b3J5IH0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAuY2F0Y2goY29uc29sZS5sb2cpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9LFxyXG4gICAgbm9uZSgpIHtcclxuICAgICAgICAvL1xyXG4gICAgfSxcclxuICAgIHN3aXRjaChlOiBXeFRvdWNoRXZlbnQpIHtcclxuICAgICAgICB0aGlzLmRhdGEudGFiVHlwZSA9ICtlLnRhcmdldC5kYXRhc2V0LnR5cGU7XHJcbiAgICAgICAgY29uc3QgYW5vdGhlciA9IHRoaXMuZGF0YS5hbm90aGVyO1xyXG4gICAgICAgIHRoaXMuZGF0YS5hbm90aGVyID0gdGhpcy5kYXRhLmhpc3Rvcnk7XHJcblxyXG4gICAgICAgIGlmIChhbm90aGVyLmxlbmd0aCkge1xyXG4gICAgICAgICAgICB0aGlzLmRhdGEuaGlzdG9yeSA9IGFub3RoZXI7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnNldERhdGEhKHRoaXMuZGF0YSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLl9jb2xsZWN0aW9uKCk7XHJcbiAgICB9LFxyXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gICAgX2NhbmNlbENvbGxlY3QoaW5kZXg6IG51bWJlcikge1xyXG4gICAgICAgIGNvbnN0IGhpc3RvcnkgPSB0aGlzLmRhdGEuaGlzdG9yeTtcclxuXHJcbiAgICAgICAgcmVxdWVzdCh7XHJcbiAgICAgICAgICAgIHVybDogJy9hcGkvbGlrZScsXHJcbiAgICAgICAgICAgIG1ldGhvZDogJ0RFTEVURScsXHJcbiAgICAgICAgICAgIGRhdGE6IHtcclxuICAgICAgICAgICAgICAgIHRhcmdldElkOiBoaXN0b3J5W2luZGV4XS5pZCxcclxuICAgICAgICAgICAgICAgIHR5cGU6IHRoaXMuZGF0YS50YWJUeXBlXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG4gICAgICAgICAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB3eC5zaG93VG9hc3QoeyB0aXRsZTogJ+WPlua2iOaQnOiXj+aIkOWKnycgfSk7XHJcbiAgICAgICAgICAgICAgICBoaXN0b3J5LnNwbGljZShpbmRleCwgMSk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNldERhdGEhKHsgaGlzdG9yeSB9KTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLmNhdGNoKGNvbnNvbGUubG9nKTtcclxuICAgIH0sXHJcbiAgICBfYXdhaXQoKSB7XHJcbiAgICAgICAgdGhpcy5fcmVxdWVzdCgnL2FwaS9hY3Rpdml0eS9wYXJ0aWNpcGF0aW9uL2xpc3QvYXdhaXQnKTtcclxuICAgIH0sXHJcbiAgICBfYXVkaXRpbmcoKSB7XHJcbiAgICAgICAgdGhpcy5fcmVxdWVzdCgnL2FwaS9hY3Rpdml0eS9wYXJ0aWNpcGF0aW9uL2xpc3QvYXVkaXRpbmcnKTtcclxuICAgIH0sXHJcbiAgICBfY29tcGxldGUoKSB7XHJcbiAgICAgICAgdGhpcy5fcmVxdWVzdCgnL2FwaS9hY3Rpdml0eS9wYXJ0aWNpcGF0aW9uL2xpc3QvY29tcGxldGUnKTtcclxuICAgIH0sXHJcbiAgICBfZXZhbHVhdGUoKSB7XHJcbiAgICAgICAgdGhpcy5fcmVxdWVzdCgnL2FwaS9hY3Rpdml0eS9wYXJ0aWNpcGF0aW9uL2xpc3QvZXZhbHVhdGUnKTtcclxuICAgIH0sXHJcbiAgICBfaW5pdGlhdGUoKSB7XHJcbiAgICAgICAgdGhpcy5fcmVxdWVzdCgnL2FwaS9hY3Rpdml0eS9teScpO1xyXG4gICAgfSxcclxuICAgIF9jb2xsZWN0aW9uKCkge1xyXG4gICAgICAgIGNvbnN0IHRhYlR5cGUgPSB0aGlzLmRhdGEudGFiVHlwZTtcclxuICAgICAgICByZXF1ZXN0PElDb21tb2RpdHlbXSB8IElBY3RpdmVbXT4oe1xyXG4gICAgICAgICAgICB1cmw6ICcvYXBpL2xpa2UnLFxyXG4gICAgICAgICAgICBkYXRhOiB7IHR5cGU6IHRhYlR5cGUgfVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgICAgIC50aGVuKCh7IGRhdGEgfSkgPT4gdGhpcy5zZXREYXRhISh7XHJcbiAgICAgICAgICAgICAgICBoaXN0b3J5OiAoPGFueVtdPmRhdGEpLm1hcChwYXJzZURhdGEpLFxyXG4gICAgICAgICAgICAgICAgdHlwZTogdGhpcy5kYXRhLnR5cGUsXHJcbiAgICAgICAgICAgICAgICB0YWJUeXBlLFxyXG4gICAgICAgICAgICAgICAgdXJsOiB0YWJUeXBlID8gJycgOiAnL3BhZ2VzL2FjdGl2aXR5L2RldGFpbHMvZGV0YWlscydcclxuICAgICAgICAgICAgfSkpXHJcbiAgICAgICAgICAgIC5jYXRjaChjb25zb2xlLmxvZyk7XHJcbiAgICB9LFxyXG4gICAgX3JlcXVlc3QodXJsOiBzdHJpbmcpIHtcclxuICAgICAgICByZXF1ZXN0PElBY3RpdmVbXT4oeyB1cmwgfSlcclxuICAgICAgICAgICAgLnRoZW4oKHsgZGF0YSB9KSA9PiB0aGlzLnNldERhdGEhKHsgdHlwZTogdGhpcy5kYXRhLnR5cGUsIGhpc3Rvcnk6IGRhdGEubWFwKHBhcnNlRGF0YSkgfSkpXHJcbiAgICAgICAgICAgIC5jYXRjaChjb25zb2xlLmxvZyk7XHJcbiAgICB9XHJcbn0pO1xyXG4iXX0=