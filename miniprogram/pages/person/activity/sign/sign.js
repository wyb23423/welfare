"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var status_1 = require("../../../../constant/status");
var http_1 = require("../../../../utils/http");
Page({
    id: 0,
    data: {
        auditing: [],
        join: [],
        refuse: [],
        STATUS: {
            AUDITING: status_1.SIGN_STATUS.AUDITING,
            AWAIT: status_1.SIGN_STATUS.AWAIT,
            JOINING: status_1.SIGN_STATUS.JOINING,
            REFUSE: status_1.SIGN_STATUS.REFUSE
        }
    },
    onLoad: function (query) {
        var _this = this;
        var activityId = this.id = +query.id;
        http_1.request({
            url: '/api/activity/participation/auditList',
            data: { activityId: activityId }
        })
            .then(function (_a) {
            var list = _a.data;
            var auditing = [];
            var refuse = [];
            var join = [];
            list.forEach(function (v) {
                switch (v.status) {
                    case status_1.SIGN_STATUS.AUDITING:
                        auditing.push(v);
                        break;
                    case status_1.SIGN_STATUS.REFUSE:
                        refuse.push(v);
                        break;
                    case status_1.SIGN_STATUS.AWAIT:
                    case status_1.SIGN_STATUS.JOINING:
                        join.push(v);
                        break;
                    default: break;
                }
            });
            _this.setData({ refuse: refuse, auditing: auditing, join: join });
        })
            .catch(console.log);
    },
    doSign: function (_a) {
        var _this = this;
        var index = _a.currentTarget.dataset.index;
        var item = this.data.join[index];
        if (!item) {
            return;
        }
        wx.showModal({
            title: item.name,
            content: '活动签到确认',
            success: function (_a) {
                var confirm = _a.confirm;
                if (!confirm) {
                    return;
                }
                http_1.request({
                    url: '/api/activity/participation/signIn',
                    data: {
                        activityId: _this.id,
                        user: item.userId
                    }
                })
                    .then(function () {
                    var _a;
                    return _this.setData((_a = {},
                        _a["join[" + index + "].status"] = status_1.SIGN_STATUS.JOINING,
                        _a));
                })
                    .catch(console.log);
            }
        });
    },
    doAuit: function (e) {
        var _this = this;
        var isOk = !!e.target.dataset.ok;
        var index = e.currentTarget.dataset.index;
        wx.showModal({
            title: this.data.auditing[index].name,
            content: (!isOk ? '拒绝' : '同意') + '该用户参加该活动?',
            success: function (_a) {
                var confirm = _a.confirm;
                return confirm && _this._doAuit(isOk, index);
            }
        });
    },
    _doAuit: function (isOk, index) {
        var _this = this;
        var _a = this.data, auditing = _a.auditing, refuse = _a.refuse, join = _a.join;
        http_1.request({
            url: '/api/activity/participation/audit',
            data: {
                flag: isOk,
                activityId: this.id,
                userId: auditing[index].userId
            }
        })
            .then(function () {
            wx.showToast({ title: '操作成功' });
            var item = auditing.splice(index, 1)[0];
            item.status = isOk ? status_1.SIGN_STATUS.AWAIT : status_1.SIGN_STATUS.REFUSE;
            (isOk ? join : refuse).push(item);
            _this.setData({ auditing: auditing, join: join, refuse: refuse });
        })
            .catch(console.log);
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lnbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInNpZ24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxzREFBMEQ7QUFDMUQsK0NBQWlEO0FBU2pELElBQUksQ0FBQztJQUNELEVBQUUsRUFBRSxDQUFDO0lBQ0wsSUFBSSxFQUFFO1FBQ0YsUUFBUSxFQUFZLEVBQUU7UUFDdEIsSUFBSSxFQUFZLEVBQUU7UUFDbEIsTUFBTSxFQUFZLEVBQUU7UUFDcEIsTUFBTSxFQUFFO1lBQ0osUUFBUSxFQUFFLG9CQUFXLENBQUMsUUFBUTtZQUM5QixLQUFLLEVBQUUsb0JBQVcsQ0FBQyxLQUFLO1lBQ3hCLE9BQU8sRUFBRSxvQkFBVyxDQUFDLE9BQU87WUFDNUIsTUFBTSxFQUFFLG9CQUFXLENBQUMsTUFBTTtTQUM3QjtLQUNKO0lBQ0QsTUFBTSxZQUFDLEtBQW1CO1FBQTFCLGlCQThCQztRQTdCRyxJQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsRUFBRSxHQUFHLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQztRQUN2QyxjQUFPLENBQVc7WUFDZCxHQUFHLEVBQUUsdUNBQXVDO1lBQzVDLElBQUksRUFBRSxFQUFFLFVBQVUsWUFBQSxFQUFFO1NBQ3ZCLENBQUM7YUFDRyxJQUFJLENBQUMsVUFBQyxFQUFZO2dCQUFYLGNBQVU7WUFDZCxJQUFNLFFBQVEsR0FBYSxFQUFFLENBQUM7WUFDOUIsSUFBTSxNQUFNLEdBQWEsRUFBRSxDQUFDO1lBQzVCLElBQU0sSUFBSSxHQUFhLEVBQUUsQ0FBQztZQUUxQixJQUFJLENBQUMsT0FBTyxDQUFDLFVBQUEsQ0FBQztnQkFDVixRQUFPLENBQUMsQ0FBQyxNQUFNLEVBQUU7b0JBQ2IsS0FBSyxvQkFBVyxDQUFDLFFBQVE7d0JBQ3JCLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7d0JBQ2pCLE1BQU07b0JBQ1YsS0FBSyxvQkFBVyxDQUFDLE1BQU07d0JBQ25CLE1BQU0sQ0FBQyxJQUFJLENBQUMs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QUFDO1lBQy9CLElBQU0sSUFBSSxHQUFHLFFBQVEsQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzFDLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxvQkFBVyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsb0JBQVcsQ0FBQyxNQUFNLENBQUM7WUFDNUQsQ0FBQyxJQUFJLENBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ25DLEtBQUksQ0FBQyxPQUFRLENBQUMsRUFBQyxRQUFRLFVBQUEsRUFBRSxJQUFJLE1BQUEsRUFBRSxNQUFNLFFBQUEsRUFBQyxDQUFDLENBQUM7UUFDNUMsQ0FBQyxDQUFDO2FBQ0QsS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUN4QixDQUFDO0NBQ0osQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU0lHTl9TVEFUVVMgfSBmcm9tICcuLi8uLi8uLi8uLi9jb25zdGFudC9zdGF0dXMnO1xyXG5pbXBvcnQgeyByZXF1ZXN0IH0gZnJvbSAnLi4vLi4vLi4vLi4vdXRpbHMvaHR0cCc7XHJcblxyXG5pbnRlcmZhY2UgRW5JbmZvIHtcclxuICAgIG5hbWU6IHN0cmluZztcclxuICAgIHBob25lOiBzdHJpbmc7XHJcbiAgICB1c2VySWQ6IHN0cmluZztcclxuICAgIHN0YXR1czogU0lHTl9TVEFUVVM7XHJcbn1cclxuXHJcblBhZ2Uoe1xyXG4gICAgaWQ6IDAsXHJcbiAgICBkYXRhOiB7XHJcbiAgICAgICAgYXVkaXRpbmc6IDxFbkluZm9bXT5bXSwgLy8g5b6F5a6h5qC4XHJcbiAgICAgICAgam9pbjogPEVuSW5mb1tdPltdLCAvLyDlj4LliqDogIXliJfooahcclxuICAgICAgICByZWZ1c2U6IDxFbkluZm9bXT5bXSwgLy8g5bey5ouS57udXHJcbiAgICAgICAgU1RBVFVTOiB7XHJcbiAgICAgICAgICAgIEFVRElUSU5HOiBTSUdOX1NUQVRVUy5BVURJVElORyxcclxuICAgICAgICAgICAgQVdBSVQ6IFNJR05fU1RBVFVTLkFXQUlULFxyXG4gICAgICAgICAgICBKT0lOSU5HOiBTSUdOX1NUQVRVUy5KT0lOSU5HLFxyXG4gICAgICAgICAgICBSRUZVU0U6IFNJR05fU1RBVFVTLlJFRlVTRVxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBvbkxvYWQocXVlcnk6IHtpZDogc3RyaW5nfSkge1xyXG4gICAgICAgIGNvbnN0IGFjdGl2aXR5SWQgPSB0aGlzLmlkID0gK3F1ZXJ5LmlkO1xyXG4gICAgICAgIHJlcXVlc3Q8RW5JbmZvW10+KHtcclxuICAgICAgICAgICAgdXJsOiAnL2FwaS9hY3Rpdml0eS9wYXJ0aWNpcGF0aW9uL2F1ZGl0TGlzdCcsXHJcbiAgICAgICAgICAgIGRhdGE6IHsgYWN0aXZpdHlJZCB9XHJcbiAgICAgICAgfSlcclxuICAgICAgICAgICAgLnRoZW4oKHtkYXRhOiBsaXN0fSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgYXVkaXRpbmc6IEVuSW5mb1tdID0gW107XHJcbiAgICAgICAgICAgICAgICBjb25zdCByZWZ1c2U6IEVuSW5mb1tdID0gW107XHJcbiAgICAgICAgICAgICAgICBjb25zdCBqb2luOiBFbkluZm9bXSA9IFtdO1xyXG5cclxuICAgICAgICAgICAgICAgIGxpc3QuZm9yRWFjaCh2ID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBzd2l0Y2godi5zdGF0dXMpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBTSUdOX1NUQVRVUy5BVURJVElORzpcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF1ZGl0aW5nLnB1c2godik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBTSUdOX1NUQVRVUy5SRUZVU0U6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWZ1c2UucHVzaCh2KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFNJR05fU1RBVFVTLkFXQUlUOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFNJR05fU1RBVFVTLkpPSU5JTkc6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBqb2luLnB1c2godik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdDogYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAgICAgdGhpcy5zZXREYXRhISh7cmVmdXNlLCBhdWRpdGluZywgam9pbn0pO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAuY2F0Y2goY29uc29sZS5sb2cpO1xyXG4gICAgfSxcclxuICAgIC8vIOetvuWIsFxyXG4gICAgZG9TaWduKHtjdXJyZW50VGFyZ2V0OiB7ZGF0YXNldDoge2luZGV4fX19OiBCYXNlRXZlbnQ8e2luZGV4OiBudW1iZXJ9Pikge1xyXG4gICAgICAgIGNvbnN0IGl0ZW0gPSB0aGlzLmRhdGEuam9pbltpbmRleF07XHJcbiAgICAgICAgaWYoIWl0ZW0pIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgd3guc2hvd01vZGFsKHtcclxuICAgICAgICAgICAgdGl0bGU6IGl0ZW0ubmFtZSxcclxuICAgICAgICAgICAgY29udGVudDogJ+a0u+WKqOetvuWIsOehruiupCcsXHJcbiAgICAgICAgICAgIHN1Y2Nlc3M6ICh7Y29uZmlybX0pID0+IHtcclxuICAgICAgICAgICAgICAgIGlmKCFjb25maXJtKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIHJlcXVlc3Qoe1xyXG4gICAgICAgICAgICAgICAgICAgIHVybDogJy9hcGkvYWN0aXZpdHkvcGFydGljaXBhdGlvbi9zaWduSW4nLFxyXG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYWN0aXZpdHlJZDogdGhpcy5pZCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgdXNlcjogaXRlbS51c2VySWRcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgLnRoZW4oKCkgPT4gIHRoaXMuc2V0RGF0YSEoe1xyXG4gICAgICAgICAgICAgICAgICAgIFtgam9pblske2luZGV4fV0uc3RhdHVzYF06IFNJR05fU1RBVFVTLkpPSU5JTkdcclxuICAgICAgICAgICAgICAgIH0pKVxyXG4gICAgICAgICAgICAgICAgLmNhdGNoKGNvbnNvbGUubG9nKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfSxcclxuICAgIC8vIOaKpeWQjeWuoeaguFxyXG4gICAgZG9BdWl0KGU6IEJhc2VFdmVudDx7b2s/OiBzdHJpbmd9LCB7aW5kZXg6IG51bWJlcn0+KSB7XHJcbiAgICAgICAgY29uc3QgaXNPayA9ICEhZS50YXJnZXQuZGF0YXNldC5vaztcclxuICAgICAgICBjb25zdCBpbmRleCA9IGUuY3VycmVudFRhcmdldC5kYXRhc2V0LmluZGV4O1xyXG5cclxuICAgICAgICB3eC5zaG93TW9kYWwoe1xyXG4gICAgICAgICAgICB0aXRsZTogdGhpcy5kYXRhLmF1ZGl0aW5nW2luZGV4XS5uYW1lLFxyXG4gICAgICAgICAgICBjb250ZW50OiAoIWlzT2sgPyAn5ouS57udJyA6ICflkIzmhI8nKSArICfor6XnlKjmiLflj4LliqDor6XmtLvliqg/JyxcclxuICAgICAgICAgICAgc3VjY2VzczogKHtjb25maXJtfSkgPT4gY29uZmlybSAmJiB0aGlzLl9kb0F1aXQoaXNPaywgaW5kZXgpXHJcbiAgICAgICAgfSk7XHJcbiAgICB9LFxyXG4gICAgX2RvQXVpdChpc09rOiBib29sZWFuLCBpbmRleDogbnVtYmVyKSB7XHJcbiAgICAgICAgY29uc3Qge2F1ZGl0aW5nLCByZWZ1c2UsIGpvaW59ID0gdGhpcy5kYXRhO1xyXG5cclxuICAgICAgICByZXF1ZXN0KHtcclxuICAgICAgICAgICAgdXJsOiAnL2FwaS9hY3Rpdml0eS9wYXJ0aWNpcGF0aW9uL2F1ZGl0JyxcclxuICAgICAgICAgICAgZGF0YToge1xyXG4gICAgICAgICAgICAgICAgZmxhZzogaXNPayxcclxuICAgICAgICAgICAgICAgIGFjdGl2aXR5SWQ6IHRoaXMuaWQsXHJcbiAgICAgICAgICAgICAgICB1c2VySWQ6IGF1ZGl0aW5nW2luZGV4XS51c2VySWRcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgICAgICB3eC5zaG93VG9hc3Qoe3RpdGxlOiAn5pON5L2c5oiQ5YqfJyB9KTtcclxuICAgICAgICAgICAgY29uc3QgaXRlbSA9IGF1ZGl0aW5nLnNwbGljZShpbmRleCwgMSlbMF07XHJcbiAgICAgICAgICAgIGl0ZW0uc3RhdHVzID0gaXNPayA/IFNJR05fU1RBVFVTLkFXQUlUIDogU0lHTl9TVEFUVVMuUkVGVVNFO1xyXG4gICAgICAgICAgICAoaXNPayAgPyBqb2luIDogcmVmdXNlKS5wdXNoKGl0ZW0pO1xyXG4gICAgICAgICAgICB0aGlzLnNldERhdGEhKHthdWRpdGluZywgam9pbiwgcmVmdXNlfSk7XHJcbiAgICAgICAgfSlcclxuICAgICAgICAuY2F0Y2goY29uc29sZS5sb2cpO1xyXG4gICAgfVxyXG59KTtcclxuIl19