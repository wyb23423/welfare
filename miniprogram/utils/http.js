"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var constant_1 = require("../constant");
function handle(method, options) {
    var fail = options.fail;
    var success = options.success;
    options.url = constant_1.HOST + options.url;
    return new Promise(function (resolve, reject) {
        options.success = function (res) {
            if (isSucess(res)) {
                success && success(res);
                resolve(res.data);
            }
            else {
                var errMsg = '';
                if (!(res.data instanceof ArrayBuffer || typeof res.data === 'string')) {
                    errMsg = res.data.msg;
                }
                if (errMsg) {
                    wx.showToast({
                        title: errMsg,
                        icon: 'none'
                    });
                }
                fail && fail({ errMsg: errMsg });
                reject({ errMsg: errMsg });
            }
        };
        options.fail = function (res) {
            fail && fail(res);
            reject(res);
        };
        wx[method](options);
    });
}
function isSucess(res) {
    var code = 200;
    if (!(res.data instanceof ArrayBuffer || typeof res.data === 'string')) {
        code = res.data.code;
    }
    return res.statusCode >= 200 && res.statusCode < 300 && code >= 200 && code < 300;
}
function request(options) {
    return handle('request', options);
}
exports.request = request;
function uploadFile(options) {
    return handle('uploadFile', options);
}
exports.uploadFile = uploadFile;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHR0cC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImh0dHAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx3Q0FBbUM7QUFFbkMsU0FBUyxNQUFNLENBQ1gsTUFBZ0MsRUFDaEMsT0FBK0M7SUFFL0MsSUFBTSxJQUFJLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQztJQUMxQixJQUFNLE9BQU8sR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDO0lBQ2hDLE9BQU8sQ0FBQyxHQUFHLEdBQUcsZUFBSSxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUM7SUFFakMsT0FBTyxJQUFJLE9BQU8sQ0FBQyxVQUFDLE9BQU8sRUFBRSxNQUFNO1FBQy9CLE9BQU8sQ0FBQyxPQUFPLEdBQUcsVUFBQyxHQUFRO1lBQ3ZCLElBQUksUUFBUSxDQUFDLEdBQUcsQ0FBQyxFQUFFO2dCQUNmLE9BQU8sSUFBSSxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7Z0JBQ3hCLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7YUFDckI7aUJBQU07Z0JBQ0gsSUFBSSxNQUFNLEdBQUcsRUFBRSxDQUFDO2dCQUNoQixJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxZQUFZLFdBQVcsSUFBSSxPQUFPLEdBQUcsQ0FBQyxJQUFJLEtBQUssUUFBUSxDQUFDLEVBQUU7b0JBQ3BFLE1BQU0sR0FBa0IsR0FBRyxDQUFDLElBQUssQ0FBQyxHQUFHLENBQUM7aUJBQ3pDO2dCQUVELElBQUksTUFBTSxFQUFFO29CQUNSLEVBQUUsQ0FBQyxTQUFTLENBQUM7d0JBQ1QsS0FBSyxFQUFFLE1BQU07d0JBQ2IsSUFBSSxFQUFFLE1BQU07cUJBQ2YsQ0FBQyxDQUFDO2lCQUNOO2dCQUVELElBQUksSUFBSSxJQUFJLENBQUMsRUFBRSxNQUFNLFFBQUEsRUFBRSxDQUFDLENBQUM7Z0JBQ3pCLE1BQU0sQ0FBQyxFQUFFLE1BQU0sUUFBQSxFQUFFLENBQUMsQ0FBQzthQUN0QjtRQUNMLENBQUMsQ0FBQztRQUNGLE9BQU8sQ0FBQyxJQUFJLEdBQUcsVUFBQyxHQUE2QjtZQUN6QyxJQUFJLElBQUksSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ2xCLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNoQixDQUFDLENBQUM7UUFFRixFQUFFLENBQUMsTUFBTSxDQUFDLENBQU0sT0FBTyxDQUFDLENBQUM7SUFDN0IsQ0FBQyxDQUFDLENBQUM7QUFDUCxDQUFDO0FBRUQsU0FBUyxRQUFRLENBQUMsR0FBeUU7SUFDdkYsSUFBSSxJQUFJLEdBQUcsR0FBRyxDQUFDO0lBQ2YsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksWUFBWSxXQUFXLElBQUksT0FBTyxHQUFHLENBQUMsSUFBSSxLQUFLLFFBQVEsQ0FBQyxFQUFFO1FBQ3BFLElBQUksR0FBa0IsR0FBRyxDQUFDLElBQUssQ0FBQyxJQUFJLENBQUM7S0FDeEM7SUFFRCxPQUFPLEdBQUcsQ0FBQyxVQUFVLElBQUksR0FBRyxJQUFJLEdBQUcsQ0FBQyxVQUFVLEdBQUcsR0FBRyxJQUFJLElBQUksSUFBSSxHQUFHLElBQUksSUFBSSxHQUFHLEdBQUcsQ0FBQztBQUN0RixDQUFDO0FBRUQsU0FBZ0IsT0FBTyxDQUFJLE9BQXlCO0lBQ2hELE9BQU8sTUFBTSxDQUFJLFNBQVMsRUFBRSxPQUFPLENBQUMsQ0FBQztBQUN6QyxDQUFDO0FBRkQsMEJBRUM7QUFFRCxTQUFnQixVQUFVLENBQUksT0FBNEI7SUFDdEQsT0FBTyxNQUFNLENBQUksWUFBWSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQzVDLENBQUM7QUFGRCxnQ0FFQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEhPU1QgfSBmcm9tICcuLi9jb25zdGFudCc7XHJcblxyXG5mdW5jdGlvbiBoYW5kbGU8VD4oXHJcbiAgICBtZXRob2Q6ICdyZXF1ZXN0JyB8ICd1cGxvYWRGaWxlJyxcclxuICAgIG9wdGlvbnM6IHd4LlJlcXVlc3RPcHRpb24gfCB3eC5VcGxvYWRGaWxlT3B0aW9uXHJcbik6IFByb21pc2U8UmVzcG9lbnNEYXRhPFQ+PiB7XHJcbiAgICBjb25zdCBmYWlsID0gb3B0aW9ucy5mYWlsO1xyXG4gICAgY29uc3Qgc3VjY2VzcyA9IG9wdGlvbnMuc3VjY2VzcztcclxuICAgIG9wdGlvbnMudXJsID0gSE9TVCArIG9wdGlvbnMudXJsO1xyXG5cclxuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcbiAgICAgICAgb3B0aW9ucy5zdWNjZXNzID0gKHJlczogYW55KSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChpc1N1Y2VzcyhyZXMpKSB7XHJcbiAgICAgICAgICAgICAgICBzdWNjZXNzICYmIHN1Y2Nlc3MocmVzKTtcclxuICAgICAgICAgICAgICAgIHJlc29sdmUocmVzLmRhdGEpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgbGV0IGVyck1zZyA9ICcnO1xyXG4gICAgICAgICAgICAgICAgaWYgKCEocmVzLmRhdGEgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlciB8fCB0eXBlb2YgcmVzLmRhdGEgPT09ICdzdHJpbmcnKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGVyck1zZyA9ICg8UmVzcG9lbnNEYXRhPnJlcy5kYXRhKS5tc2c7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKGVyck1zZykge1xyXG4gICAgICAgICAgICAgICAgICAgIHd4LnNob3dUb2FzdCh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiBlcnJNc2csXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGljb246ICdub25lJ1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIGZhaWwgJiYgZmFpbCh7IGVyck1zZyB9KTtcclxuICAgICAgICAgICAgICAgIHJlamVjdCh7IGVyck1zZyB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbiAgICAgICAgb3B0aW9ucy5mYWlsID0gKHJlczogd3guR2VuZXJhbENhbGxiYWNrUmVzdWx0KSA9PiB7XHJcbiAgICAgICAgICAgIGZhaWwgJiYgZmFpbChyZXMpO1xyXG4gICAgICAgICAgICByZWplY3QocmVzKTtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICB3eFttZXRob2RdKDxhbnk+b3B0aW9ucyk7XHJcbiAgICB9KTtcclxufVxyXG5cclxuZnVuY3Rpb24gaXNTdWNlc3MocmVzOiB3eC5SZXF1ZXN0U3VjY2Vzc0NhbGxiYWNrUmVzdWx0IHwgd3guVXBsb2FkRmlsZVN1Y2Nlc3NDYWxsYmFja1Jlc3VsdCkge1xyXG4gICAgbGV0IGNvZGUgPSAyMDA7XHJcbiAgICBpZiAoIShyZXMuZGF0YSBpbnN0YW5jZW9mIEFycmF5QnVmZmVyIHx8IHR5cGVvZiByZXMuZGF0YSA9PT0gJ3N0cmluZycpKSB7XHJcbiAgICAgICAgY29kZSA9ICg8UmVzcG9lbnNEYXRhPnJlcy5kYXRhKS5jb2RlO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiByZXMuc3RhdHVzQ29kZSA+PSAyMDAgJiYgcmVzLnN0YXR1c0NvZGUgPCAzMDAgJiYgY29kZSA+PSAyMDAgJiYgY29kZSA8IDMwMDtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHJlcXVlc3Q8VD4ob3B0aW9uczogd3guUmVxdWVzdE9wdGlvbikge1xyXG4gICAgcmV0dXJuIGhhbmRsZTxUPigncmVxdWVzdCcsIG9wdGlvbnMpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gdXBsb2FkRmlsZTxUPihvcHRpb25zOiB3eC5VcGxvYWRGaWxlT3B0aW9uKSB7XHJcbiAgICByZXR1cm4gaGFuZGxlPFQ+KCd1cGxvYWRGaWxlJywgb3B0aW9ucyk7XHJcbn1cclxuIl19