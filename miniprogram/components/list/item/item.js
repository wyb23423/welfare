"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = require("../../../utils/util");
var http_1 = require("../../../utils/http");
function parseTime(start, end) {
    var _a = util_1.resolveTime(start), sy = _a.year, sm = _a.month, sd = _a.day;
    var _b = util_1.resolveTime(end), ey = _b.year, em = _b.month, ed = _b.day;
    if (sy === ey) {
        if (sm === em && sd === ed) {
            return sm + "/" + sd;
        }
        return sm + "/" + sd + " - " + em + "/" + ed;
    }
    else {
        return sy + "/" + sm + "/" + sd + " - " + ey + "/" + em + "/" + sd;
    }
}
Component({
    options: {
        multipleSlots: true
    },
    properties: {
        info: {
            type: Object,
            value: {}
        },
        isGoods: {
            type: Number,
            value: 0
        },
        hasBtn: {
            type: Boolean,
            value: false
        }
    },
    data: {
        time: '',
        btn: ''
    },
    attached: function () {
        var _a = this.data, _b = _a.info, size = _b.size, sign = _b.sign, origination = _b.origination, finish = _b.finish, hasBtn = _a.hasBtn, isGoods = _a.isGoods;
        var obj = { time: parseTime(+origination, +finish), btn: '' };
        if (hasBtn) {
            var text = parseBtnText(sign, size);
            var word = isGoods ? '兑换' : '报名';
            obj.btn = text ? word + text : '立即' + word;
        }
        this.setData(obj);
    },
    methods: {
        clickBtn: function () {
            var _a = this.data, _b = _a.info, size = _b.size, sign = _b.sign, origination = _b.origination, id = _b.id, isGoods = _a.isGoods;
            if (size - sign <= 0 || Date.now() > origination) {
                return;
            }
            if (isGoods) {
                exchange(createEvent({ id: id }));
            }
            else {
                wx.navigateTo({ url: "/pages/sign/sign?id=" + id });
            }
        }
    }
});
function parseBtnText(sign, size) {
    var reset = size - sign;
    if (reset <= 0) {
        return '已满';
    }
    else if (reset <= Math.max(2, Math.round(size / 10))) {
        return '仅剩' + reset + '名';
    }
    return '';
}
exports.parseBtnText = parseBtnText;
function exchange(e) {
    var id = e.target.dataset.id;
    http_1.request({ url: '/api/commodity/participation/deal/' + id })
        .then(function () { return wx.showToast({ title: '兑换成功' }); })
        .catch(console.log);
}
exports.exchange = exchange;
function createEvent(dataset) {
    return {
        type: 'simulation',
        detail: {},
        target: { id: 'id', dataset: dataset },
        currentTarget: { id: 'id', dataset: dataset },
        timeStamp: Date.now(),
        mark: {}
    };
}
exports.createEvent = createEvent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXRlbS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIml0ZW0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSw0Q0FBa0Q7QUFDbEQsNENBQThDO0FBWTlDLFNBQVMsU0FBUyxDQUFDLEtBQWEsRUFBRSxHQUFXO0lBQ25DLElBQUEsOEJBQW1ELEVBQWxELFlBQVEsRUFBRSxhQUFTLEVBQUUsV0FBNkIsQ0FBQztJQUNwRCxJQUFBLDRCQUFpRCxFQUFoRCxZQUFRLEVBQUUsYUFBUyxFQUFFLFdBQTJCLENBQUM7SUFFeEQsSUFBRyxFQUFFLEtBQUssRUFBRSxFQUFFO1FBQ1YsSUFBRyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLEVBQUU7WUFDdkIsT0FBVSxFQUFFLFNBQUksRUFBSSxDQUFDO1NBQ3hCO1FBRUQsT0FBVSxFQUFFLFNBQUksRUFBRSxXQUFNLEVBQUUsU0FBSSxFQUFJLENBQUM7S0FDdEM7U0FBTTtRQUNILE9BQVUsRUFBRSxTQUFJLEVBQUUsU0FBSSxFQUFFLFdBQU0sRUFBRSxTQUFJLEVBQUUsU0FBSSxFQUFJLENBQUM7S0FDbEQ7QUFDTCxDQUFDO0FBRUQsU0FBUyxDQUFXO0lBQ2hCLE9BQU8sRUFBRTtRQUNMLGFBQWEsRUFBRSxJQUFJO0tBQ3RCO0lBQ0QsVUFBVSxFQUFFO1FBQ1IsSUFBSSxFQUFFO1lBQ0YsSUFBSSxFQUFFLE1BQU07WUFDWixLQUFLLEVBQUUsRUFBRTtTQUNaO1FBQ0QsT0FBTyxFQUFFO1lBQ0wsSUFBSSxFQUFFLE1BQU07WUFDWixLQUFLLEVBQUUsQ0FBQztTQUNYO1FBRUQsTUFBTSxFQUFFO1lBQ0osSUFBSSxFQUFFLE9BQU87WUFDYixLQUFLLEVBQUUsS0FBSztTQUNmO0tBQ0o7SUFDRCxJQUFJLEVBQUU7UUFDRixJQUFJLEVBQUUsRUFBRTtRQUNSLEdBQUcsRUFBRSxFQUFFO0tBQ1Y7SUFDRCxRQUFRO1FBQ0UsSUFBQSxjQUFzRSxFQUFyRSxZQUF1QyxFQUFoQyxjQUFJLEVBQUUsY0FBSSxFQUFFLDRCQUFXLEVBQUUsa0JBQU0sRUFBRyxrQkFBTSxFQUFFLG9CQUFvQixDQUFDO1FBRTdFLElBQU0sR0FBRyxHQUFHLEVBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUMsQ0FBQztRQUM5RCxJQUFHLE1BQU0sRUFBRTtZQUNQLElBQU0sSUFBSSxHQUFHLFlBQVksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7WUFDdEMsSUFBTSxJQUFJLEdBQUcsT0FBTyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztZQUNuQyxHQUFHLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztTQUM5QztRQUNELElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDdEIsQ0FBQztJQUNELE9BQU8sRUFBRTtRQUNMLFFBQVE7WUFDRSxJQUFBLGNBQTBELEVBQXpELFlBQW1DLEVBQTVCLGNBQUksRUFBRSxjQUFJLEVBQUUsNEJBQVcsRUFBRSxVQUFFLEVBQUcsb0JBQW9CLENBQUM7WUFDakUsSUFBRyxJQUFJLEdBQUcsSUFBSSxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsR0FBRyxFQUFFLEdBQUcsV0FBVyxFQUFFO2dCQUM3QyxPQUFPO2FBQ1Y7WUFFRCxJQUFHLE9BQU8sRUFBRTtnQkFDUixRQUFRLENBQUMsV0FBVyxDQUFDLEVBQUMsRUFBRSxJQUFBLEVBQUMsQ0FBQyxDQUFDLENBQUM7YUFDL0I7aUJBQU07Z0JBQ0gsRUFBRSxDQUFDLFVBQVUsQ0FBQyxFQUFDLEdBQUcsRUFBRSx5QkFBdUIsRUFBSSxFQUFDLENBQUMsQ0FBQzthQUNyRDtRQUNMLENBQUM7S0FDSjtDQUNKLENBQUMsQ0FBQztBQU9ILFNBQWdCLFlBQVksQ0FBQyxJQUFZLEVBQUUsSUFBWTtJQUNuRCxJQUFNLEtBQUssR0FBRyxJQUFJLEdBQUcsSUFBSSxDQUFDO0lBQzFCLElBQUcsS0FBSyxJQUFJLENBQUMsRUFBRTtRQUNYLE9BQU8sSUFBSSxDQUFDO0tBQ2Y7U0FBTSxJQUFHLEtBQUssSUFBSSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksR0FBRyxFQUFFLENBQUMsQ0FBQyxFQUFFO1FBQ25ELE9BQU8sSUFBSSxHQUFHLEtBQUssR0FBRyxHQUFHLENBQUM7S0FDN0I7SUFFRCxPQUFPLEVBQUUsQ0FBQztBQUNkLENBQUM7QUFURCxvQ0FTQztBQUtELFNBQWdCLFFBQVEsQ0FBWSxDQUEwQjtJQUMxRCxJQUFNLEVBQUUsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUM7SUFDL0IsY0FBTyxDQUFDLEVBQUUsR0FBRyxFQUFFLG9DQUFvQyxHQUFHLEVBQUUsRUFBRSxDQUFDO1NBQ3RELElBQUksQ0FBQyxjQUFNLE9BQUEsRUFBRSxDQUFDLFNBQVMsQ0FBQyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUEvQixDQUErQixDQUFDO1NBQzNDLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDNUIsQ0FBQztBQUxELDRCQUtDO0FBRUQsU0FBZ0IsV0FBVyxDQUFtQixPQUFVO0lBQ3BELE9BQU87UUFDSCxJQUFJLEVBQUUsWUFBWTtRQUNsQixNQUFNLEVBQUUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUUsT0FBTyxTQUFBLEVBQUM7UUFDM0IsYUFBYSxFQUFFLEVBQUMsRUFBRSxFQUFFLElBQUksRUFBRSxPQUFPLFNBQUEsRUFBQztRQUNsQyxTQUFTLEVBQUUsSUFBSSxDQUFDLEdBQUcsRUFBRTtRQUNyQixJQUFJLEVBQUUsRUFBRTtLQUNYLENBQUM7QUFDTixDQUFDO0FBVEQsa0NBU0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZXNvbHZlVGltZSB9IGZyb20gJy4uLy4uLy4uL3V0aWxzL3V0aWwnO1xyXG5pbXBvcnQgeyByZXF1ZXN0IH0gZnJvbSAnLi4vLi4vLi4vdXRpbHMvaHR0cCc7XHJcblxyXG5pbnRlcmZhY2UgTGlzdEl0ZW0gZXh0ZW5kcyBXeENvbXBvbmVudCB7XHJcbiAgICBkYXRhOiB7XHJcbiAgICAgICAgaW5mbzogSUFjdGl2ZSB8IElDb21tb2RpdHksXHJcbiAgICAgICAgaGFzQnRuOiBib29sZWFuO1xyXG4gICAgICAgIGlzR29vZHM6IGJvb2xlYW47XHJcbiAgICAgICAgdGltZTogc3RyaW5nO1xyXG4gICAgICAgIGJ0bjogc3RyaW5nXHJcbiAgICB9O1xyXG59XHJcblxyXG5mdW5jdGlvbiBwYXJzZVRpbWUoc3RhcnQ6IG51bWJlciwgZW5kOiBudW1iZXIpIHtcclxuICAgIGNvbnN0IHt5ZWFyOiBzeSwgbW9udGg6IHNtLCBkYXk6IHNkfSA9IHJlc29sdmVUaW1lKHN0YXJ0KTtcclxuICAgIGNvbnN0IHt5ZWFyOiBleSwgbW9udGg6IGVtLCBkYXk6IGVkfSA9IHJlc29sdmVUaW1lKGVuZCk7XHJcblxyXG4gICAgaWYoc3kgPT09IGV5KSB7XHJcbiAgICAgICAgaWYoc20gPT09IGVtICYmIHNkID09PSBlZCkge1xyXG4gICAgICAgICAgICByZXR1cm4gYCR7c219LyR7c2R9YDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiBgJHtzbX0vJHtzZH0gLSAke2VtfS8ke2VkfWA7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJldHVybiBgJHtzeX0vJHtzbX0vJHtzZH0gLSAke2V5fS8ke2VtfS8ke3NkfWA7XHJcbiAgICB9XHJcbn1cclxuXHJcbkNvbXBvbmVudDxMaXN0SXRlbT4oe1xyXG4gICAgb3B0aW9uczoge1xyXG4gICAgICAgIG11bHRpcGxlU2xvdHM6IHRydWVcclxuICAgIH0sXHJcbiAgICBwcm9wZXJ0aWVzOiB7XHJcbiAgICAgICAgaW5mbzoge1xyXG4gICAgICAgICAgICB0eXBlOiBPYmplY3QsXHJcbiAgICAgICAgICAgIHZhbHVlOiB7fVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgaXNHb29kczoge1xyXG4gICAgICAgICAgICB0eXBlOiBOdW1iZXIsXHJcbiAgICAgICAgICAgIHZhbHVlOiAwXHJcbiAgICAgICAgfSxcclxuICAgICAgICAvLyDmmK/lkKboh6rluKbmjInpkq5cclxuICAgICAgICBoYXNCdG46IHtcclxuICAgICAgICAgICAgdHlwZTogQm9vbGVhbixcclxuICAgICAgICAgICAgdmFsdWU6IGZhbHNlXHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIGRhdGE6IHtcclxuICAgICAgICB0aW1lOiAnJyxcclxuICAgICAgICBidG46ICcnXHJcbiAgICB9LFxyXG4gICAgYXR0YWNoZWQodGhpczogTGlzdEl0ZW0pIHtcclxuICAgICAgICBjb25zdCB7aW5mbzoge3NpemUsIHNpZ24sIG9yaWdpbmF0aW9uLCBmaW5pc2h9LCBoYXNCdG4sIGlzR29vZHN9ID0gdGhpcy5kYXRhO1xyXG5cclxuICAgICAgICBjb25zdCBvYmogPSB7dGltZTogcGFyc2VUaW1lKCtvcmlnaW5hdGlvbiwgK2ZpbmlzaCksIGJ0bjogJyd9O1xyXG4gICAgICAgIGlmKGhhc0J0bikge1xyXG4gICAgICAgICAgICBjb25zdCB0ZXh0ID0gcGFyc2VCdG5UZXh0KHNpZ24sIHNpemUpO1xyXG4gICAgICAgICAgICBjb25zdCB3b3JkID0gaXNHb29kcyA/ICflhZHmjaInIDogJ+aKpeWQjSc7XHJcbiAgICAgICAgICAgIG9iai5idG4gPSB0ZXh0ID8gd29yZCArIHRleHQgOiAn56uL5Y2zJyArIHdvcmQ7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuc2V0RGF0YShvYmopO1xyXG4gICAgfSxcclxuICAgIG1ldGhvZHM6IHtcclxuICAgICAgICBjbGlja0J0bigpIHtcclxuICAgICAgICAgICAgY29uc3Qge2luZm86IHtzaXplLCBzaWduLCBvcmlnaW5hdGlvbiwgaWR9LCBpc0dvb2RzfSA9IHRoaXMuZGF0YTtcclxuICAgICAgICAgICAgaWYoc2l6ZSAtIHNpZ24gPD0gMCB8fCBEYXRlLm5vdygpID4gb3JpZ2luYXRpb24pIHtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaWYoaXNHb29kcykge1xyXG4gICAgICAgICAgICAgICAgZXhjaGFuZ2UoY3JlYXRlRXZlbnQoe2lkfSkpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgd3gubmF2aWdhdGVUbyh7dXJsOiBgL3BhZ2VzL3NpZ24vc2lnbj9pZD0ke2lkfWB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufSk7XHJcblxyXG4vKipcclxuICog5qC55o2u5Y+v5oql5ZCNL+WFkeaNouWJqeS9meS6uuaVsOaYvuekuuS4jeWQjOeahOaMiemSrlxyXG4gKiBAcGFyYW0gc2lnbiDlt7LmiqXlkI0v5YWR5o2i5Lq65pWwXHJcbiAqIEBwYXJhbSBzaXplIOaAu+aVsFxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQnRuVGV4dChzaWduOiBudW1iZXIsIHNpemU6IG51bWJlcikge1xyXG4gICAgY29uc3QgcmVzZXQgPSBzaXplIC0gc2lnbjtcclxuICAgIGlmKHJlc2V0IDw9IDApIHtcclxuICAgICAgICByZXR1cm4gJ+W3sua7oSc7XHJcbiAgICB9IGVsc2UgaWYocmVzZXQgPD0gTWF0aC5tYXgoMiwgTWF0aC5yb3VuZChzaXplIC8gMTApKSkge1xyXG4gICAgICAgIHJldHVybiAn5LuF5YmpJyArIHJlc2V0ICsgJ+WQjSc7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuICcnO1xyXG59XHJcblxyXG4vKlxyXG4qIOWFkeaNouWVhuWTgVxyXG4qL1xyXG5leHBvcnQgZnVuY3Rpb24gZXhjaGFuZ2UodGhpczogYW55LCBlOiBCYXNlRXZlbnQ8e2lkOiBudW1iZXJ9Pikge1xyXG4gICAgY29uc3QgaWQgPSBlLnRhcmdldC5kYXRhc2V0LmlkO1xyXG4gICAgcmVxdWVzdCh7IHVybDogJy9hcGkvY29tbW9kaXR5L3BhcnRpY2lwYXRpb24vZGVhbC8nICsgaWQgfSlcclxuICAgICAgICAudGhlbigoKSA9PiB3eC5zaG93VG9hc3QoeyB0aXRsZTogJ+WFkeaNouaIkOWKnycgfSkpXHJcbiAgICAgICAgLmNhdGNoKGNvbnNvbGUubG9nKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUV2ZW50PFQgZXh0ZW5kcyBvYmplY3Q+KGRhdGFzZXQ6IFQpOiBCYXNlRXZlbnQ8VD4ge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICB0eXBlOiAnc2ltdWxhdGlvbicsXHJcbiAgICAgICAgZGV0YWlsOiB7fSxcclxuICAgICAgICB0YXJnZXQ6IHtpZDogJ2lkJywgZGF0YXNldH0sXHJcbiAgICAgICAgY3VycmVudFRhcmdldDoge2lkOiAnaWQnLCBkYXRhc2V0fSxcclxuICAgICAgICB0aW1lU3RhbXA6IERhdGUubm93KCksXHJcbiAgICAgICAgbWFyazoge31cclxuICAgIH07XHJcbn1cclxuIl19