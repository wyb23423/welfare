"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var http_1 = require("../../../utils/http");
var util_1 = require("../../../utils/util");
Page({
    data: {
        list: [],
        isShow: false,
        index: 0
    },
    close: function () {
        this.setData({ isShow: false });
    },
    onShow: function () {
        var _this = this;
        http_1.request({ url: '/api/commodity/participation/merchant/list' })
            .then(function (_a) {
            var list = _a.data.list;
            return _this.setData({ list: list.map(function (v) {
                    v = util_1.parseData(v);
                    v.sign = v.orders.length;
                    return v;
                }) });
        })
            .catch(console.log);
    },
    openConfirm: function (_a) {
        var index = _a.target.dataset.index;
        this.setData({ isShow: true, index: index });
    },
    doConfirm: function (e) {
        var _this = this;
        var flag = !!e.target.dataset.ok;
        var index = e.currentTarget.dataset.index;
        var orders = this.data.list[this.data.index].orders;
        wx.showModal({
            title: orders[index].userId,
            content: (!flag ? '拒绝' : '确认') + '订单?',
            success: function (_a) {
                var confirm = _a.confirm;
                return confirm && _this._confirm(flag, orders, index);
            }
        });
    },
    _confirm: function (flag, orders, index) {
        http_1.request({
            url: '/api/commodity/participation/confirm',
            method: 'POST',
            data: {
                orderId: orders[index].id,
                confirm: flag
            },
            header: {
                'Content-Type': 'application/x-www-form-urlencoded'
            }
        })
            .then(this.callback.bind(this, orders, index))
            .catch(console.log);
    },
    callback: function (orders, index) {
        wx.showToast({ title: '操作成功' });
        orders.splice(index, 1);
        if (!orders.length) {
            this.data.isShow = false;
            this.data.list.splice(this.data.index, 1);
        }
        this.setData(this.data);
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3JkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJvcmRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDRDQUE4QztBQUM5Qyw0Q0FBZ0Q7QUFtQmhELElBQUksQ0FBQztJQUNELElBQUksRUFBRTtRQUNGLElBQUksRUFBcUIsRUFBRTtRQUMzQixNQUFNLEVBQUUsS0FBSztRQUNiLEtBQUssRUFBRSxDQUFDO0tBQ1g7SUFDRCxLQUFLO1FBQ0QsSUFBSSxDQUFDLE9BQVEsQ0FBQyxFQUFDLE1BQU0sRUFBRSxLQUFLLEVBQUMsQ0FBQyxDQUFDO0lBQ25DLENBQUM7SUFDRCxNQUFNO1FBQU4saUJBU0M7UUFSRyxjQUFPLENBQVcsRUFBQyxHQUFHLEVBQUUsNENBQTRDLEVBQUMsQ0FBQzthQUNqRSxJQUFJLENBQUMsVUFBQyxFQUFjO2dCQUFOLG1CQUFJO1lBQU8sT0FBQSxLQUFJLENBQUMsT0FBUSxDQUFDLEVBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxHQUFHLENBQUMsVUFBQSxDQUFDO29CQUNyRCxDQUFDLEdBQUcsZ0JBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDakIsQ0FBQyxDQUFDLElBQUksR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQztvQkFFekIsT0FBTyxDQUFDLENBQUM7Z0JBQ2IsQ0FBQyxDQUFDLEVBQUMsQ0FBQztRQUxzQixDQUt0QixDQUFDO2FBQ0osS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUM1QixDQUFDO0lBQ0QsV0FBVyxZQUFDLEVBQXdEO1lBQXBDLCtCQUFLO1FBQ2pDLElBQUksQ0FBQyxPQUFRLENBQUMsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLEtBQUssT0FBQSxFQUFDLENBQUMsQ0FBQztJQUMxQyxDQUFDO0lBQ0QsU0FBUyxZQUFDLENBQTRDO1FBQXRELGlCQVdDO1FBVkcsSUFBTSxJQUFJLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQztRQUNuQyxJQUFNLEtBQUssR0FBRyxDQUFDLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUM7UUFFNUMsSUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxNQUFNLENBQUM7UUFFdEQsRUFBRSxDQUFDLFNBQVMsQ0FBQztZQUNULEtBQUssRUFBRSxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsTUFBTTtZQUMzQixPQUFPLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxLQUFLO1lBQ3RDLE9BQU8sRUFBRSxVQUFDLEVBQVM7b0JBQVIsb0JBQU87Z0JBQU0sT0FBQSxPQUFPLElBQUksS0FBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsTUFBTSxFQUFFLEtBQUssQ0FBQztZQUE3QyxDQUE2QztTQUN4RSxDQUFDLENBQUM7SUFDUCxDQUFDO0lBQ0QsUUFBUSxZQUFDLElBQWEsRUFBRSxNQUFnQixFQUFFLEtBQWE7UUFDbkQsY0FBTyxDQUFDO1lBQ0osR0FBRyxFQUFFLHNDQUFzQztZQUMzQyxNQUFNLEVBQUUsTUFBTTtZQUNkLElBQUksRUFBRTtnQkFDRixPQUFPLEVBQUUsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUU7Z0JBQ3pCLE9BQU8sRUFBRSxJQUFJO2FBQ2hCO1lBQ0QsTUFBTSxFQUFFO2dCQUNKLGNBQWMsRUFBRSxtQ0FBbUM7YUFDdEQ7U0FDSixDQUFDO2FBQ0QsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUM7YUFDN0MsS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUN4QixDQUFDO0lBQ0QsUUFBUSxZQUFDLE1BQWdCLEVBQUUsS0FBYTtRQUNwQyxFQUFFLENBQUMsU0FBUyxDQUFDLEVBQUMsS0FBSyxFQUFFLE1BQU0sRUFBRSxDQUFDLENBQUM7UUFDL0IsTUFBTSxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFFeEIsSUFBRyxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUU7WUFDZixJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7WUFDekIsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO1NBQzdDO1FBQ0QsSUFBSSxDQUFDLE9BQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDN0IsQ0FBQztDQUNKLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlcXVlc3QgfSBmcm9tICcuLi8uLi8uLi91dGlscy9odHRwJztcclxuaW1wb3J0IHsgcGFyc2VEYXRhIH0gZnJvbSAnLi4vLi4vLi4vdXRpbHMvdXRpbCc7XHJcblxyXG5pbnRlcmZhY2UgSUdvb2RzV2l0aE9yZGVyIHtcclxuICAgIGlkOiBudW1iZXI7XHJcbiAgICBpbWc6IHN0cmluZztcclxuICAgIG5hbWU6IHN0cmluZztcclxuICAgIHNpZ246IG51bWJlcjtcclxuICAgIHNpemU6IG51bWJlcjtcclxuICAgIG9yZGVyczogSU9yZGVyW107XHJcbn1cclxuXHJcbmludGVyZmFjZSBJT3JkZXIge1xyXG4gICAgY29tbW9kaXR5SWQ6IG51bWJlcjtcclxuICAgIGNyZWF0ZWQ6IG51bWJlcjtcclxuICAgIGlkOiBudW1iZXI7XHJcbiAgICBzdGF0dXM6IG51bWJlcjtcclxuICAgIHVzZXJJZDogc3RyaW5nO1xyXG59XHJcblxyXG5QYWdlKHtcclxuICAgIGRhdGE6IHtcclxuICAgICAgICBsaXN0OiA8SUdvb2RzV2l0aE9yZGVyW10+W10sXHJcbiAgICAgICAgaXNTaG93OiBmYWxzZSxcclxuICAgICAgICBpbmRleDogMFxyXG4gICAgfSxcclxuICAgIGNsb3NlKCkge1xyXG4gICAgICAgIHRoaXMuc2V0RGF0YSEoe2lzU2hvdzogZmFsc2V9KTtcclxuICAgIH0sXHJcbiAgICBvblNob3coKSB7XHJcbiAgICAgICAgcmVxdWVzdDxQYWdlRGF0YT4oe3VybDogJy9hcGkvY29tbW9kaXR5L3BhcnRpY2lwYXRpb24vbWVyY2hhbnQvbGlzdCd9KVxyXG4gICAgICAgICAgICAudGhlbigoe2RhdGE6IHtsaXN0fX0pID0+IHRoaXMuc2V0RGF0YSEoe2xpc3Q6IGxpc3QubWFwKHYgPT4ge1xyXG4gICAgICAgICAgICAgICAgdiA9IHBhcnNlRGF0YSh2KTtcclxuICAgICAgICAgICAgICAgIHYuc2lnbiA9IHYub3JkZXJzLmxlbmd0aDtcclxuXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdjtcclxuICAgICAgICAgICAgfSl9KSlcclxuICAgICAgICAgICAgLmNhdGNoKGNvbnNvbGUubG9nKTtcclxuICAgIH0sXHJcbiAgICBvcGVuQ29uZmlybSh7dGFyZ2V0OiB7ZGF0YXNldDoge2luZGV4fX19OiBCYXNlRXZlbnQ8e2luZGV4OiBudW1iZXJ9Pikge1xyXG4gICAgICAgIHRoaXMuc2V0RGF0YSEoeyBpc1Nob3c6IHRydWUsIGluZGV4fSk7XHJcbiAgICB9LFxyXG4gICAgZG9Db25maXJtKGU6IEJhc2VFdmVudDx7b2s/OiBzdHJpbmd9LCB7aW5kZXg6IG51bWJlcn0+KSB7XHJcbiAgICAgICAgY29uc3QgZmxhZyA9ICEhZS50YXJnZXQuZGF0YXNldC5vaztcclxuICAgICAgICBjb25zdCBpbmRleCA9IGUuY3VycmVudFRhcmdldC5kYXRhc2V0LmluZGV4O1xyXG5cclxuICAgICAgICBjb25zdCBvcmRlcnMgPSB0aGlzLmRhdGEubGlzdFt0aGlzLmRhdGEuaW5kZXhdLm9yZGVycztcclxuXHJcbiAgICAgICAgd3guc2hvd01vZGFsKHtcclxuICAgICAgICAgICAgdGl0bGU6IG9yZGVyc1tpbmRleF0udXNlcklkLFxyXG4gICAgICAgICAgICBjb250ZW50OiAoIWZsYWcgPyAn5ouS57udJyA6ICfnoa7orqQnKSArICforqLljZU/JyxcclxuICAgICAgICAgICAgc3VjY2VzczogKHtjb25maXJtfSkgPT4gY29uZmlybSAmJiB0aGlzLl9jb25maXJtKGZsYWcsIG9yZGVycywgaW5kZXgpXHJcbiAgICAgICAgfSk7XHJcbiAgICB9LFxyXG4gICAgX2NvbmZpcm0oZmxhZzogYm9vbGVhbiwgb3JkZXJzOiBJT3JkZXJbXSwgaW5kZXg6IG51bWJlcikge1xyXG4gICAgICAgIHJlcXVlc3Qoe1xyXG4gICAgICAgICAgICB1cmw6ICcvYXBpL2NvbW1vZGl0eS9wYXJ0aWNpcGF0aW9uL2NvbmZpcm0nLFxyXG4gICAgICAgICAgICBtZXRob2Q6ICdQT1NUJyxcclxuICAgICAgICAgICAgZGF0YToge1xyXG4gICAgICAgICAgICAgICAgb3JkZXJJZDogb3JkZXJzW2luZGV4XS5pZCxcclxuICAgICAgICAgICAgICAgIGNvbmZpcm06IGZsYWdcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgaGVhZGVyOiB7XHJcbiAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCdcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLnRoZW4odGhpcy5jYWxsYmFjay5iaW5kKHRoaXMsIG9yZGVycywgaW5kZXgpKVxyXG4gICAgICAgIC5jYXRjaChjb25zb2xlLmxvZyk7XHJcbiAgICB9LFxyXG4gICAgY2FsbGJhY2sob3JkZXJzOiBJT3JkZXJbXSwgaW5kZXg6IG51bWJlcikge1xyXG4gICAgICAgIHd4LnNob3dUb2FzdCh7dGl0bGU6ICfmk43kvZzmiJDlip8nIH0pO1xyXG4gICAgICAgIG9yZGVycy5zcGxpY2UoaW5kZXgsIDEpO1xyXG5cclxuICAgICAgICBpZighb3JkZXJzLmxlbmd0aCkge1xyXG4gICAgICAgICAgICB0aGlzLmRhdGEuaXNTaG93ID0gZmFsc2U7XHJcbiAgICAgICAgICAgIHRoaXMuZGF0YS5saXN0LnNwbGljZSh0aGlzLmRhdGEuaW5kZXgsIDEpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnNldERhdGEhKHRoaXMuZGF0YSk7XHJcbiAgICB9XHJcbn0pO1xyXG4iXX0=